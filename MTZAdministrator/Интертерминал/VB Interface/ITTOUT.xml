<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Отгрузка"/><AttributeHolder Name="Name" Value="ITTOUTGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="' основной интерфейс компонента ITTOUTGUI
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Конструктор класса ITTOUT
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Отгрузка&quot;
End Sub


'Деструктор класса
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Terminate()
Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub

'Очистка обратных ссылок
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub

'Поиск формы редактирования
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindForm(...параметры...)
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function

'Путь к текущей библиотеке
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.GUIPath() 
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function

'Количество открытых форм
'Parameters:
'[IN]   InstanceID , тип параметра: String  - ...
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me.FormCount(...параметры...) 
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function

'Очистить форму
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String, 
'[IN]   ModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.EraseForm({параметры})
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub

'Указатель модального режима работы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. IsModal
public property get IsModal() as boolean
 IsModal = mOpenModal
end property

'Показать форму редактирования документа
'Parameters:
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   optional OpenModal , тип параметра: boolean = false  - ...
'See Also:
'Example:
'  call me.Show({параметры})
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Отгрузка)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTOUT:admi&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTOUT:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTOUT:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Отгрузка&quot; 
  end if
end if
if OpenModal then
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTOUT:admi&quot;)) then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTOUT:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTOUT:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Отгрузка&quot; 
  end if
end if
end sub

'Покзать форму редактирования строки раздела. RowItem -  объект строка, уже должен быть создан
'Parameters:
'[IN]   Mode , тип параметра: String, 
'[IN][OUT]   RowItem , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.ShowAddForm(...параметры...) 
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ITTOUT_SRV&quot; Then
    Set f = New frmITTOUT_SRV_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_DEF&quot; Then
    Set f = New frmITTOUT_DEF_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_EPL&quot; Then
    Set f = New frmITTOUT_EPL_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_LINES&quot; Then
    Set f = New frmITTOUT_LINES_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ITTOUT_PALET&quot; Then
    Set f = New frmITTOUT_PALET_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
 End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ITTOUT_SRV&quot; Then
    Set f = New frmITTOUT_SRV_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_DEF&quot; Then
    Set f = New frmITTOUT_DEF_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_EPL&quot; Then
    Set f = New frmITTOUT_EPL_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_LINES&quot; Then
    Set f = New frmITTOUT_LINES_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ITTOUT_PALET&quot; Then
    Set f = New frmITTOUT_PALET_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ITTOUT_SRV&quot; Then
    Set f = New frmITTOUT_SRV_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_DEF&quot; Then
    Set f = New frmITTOUT_DEF_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_EPL&quot; Then
    Set f = New frmITTOUT_EPL_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTOUT_LINES&quot; Then
    Set f = New frmITTOUT_LINES_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ITTOUT_PALET&quot; Then
    Set f = New frmITTOUT_PALET_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_SRV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_SRV&quot;, id, brief) Then
          txtSRV.Tag = Left(id, 38)
          txtSRV = brief
        End If
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
          txtSRV.Tag = &quot;&quot;
          txtSRV = &quot;&quot;
End sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSRV.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtQuantity.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtSRV.Tag &lt;&gt; &quot;&quot; Then
  Set item.SRV = Item.Application.FindRowObject(&quot;ITTD_SRV&quot;,txtSRV.Tag)
Else
  Set item.SRV = Nothing
End If
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_DEF" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblShipOrder"/><Properties Name="Caption" PropValue="Заказ на отгрузку:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtShipOrder"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Заказ на отгрузку"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdShipOrder"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Заказ на отгрузку"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDShipOrder as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtShipOrder_Change()
  if  not (OnInit) then 
If (txtShipOrder.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtShipOrder.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtShipOrder.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtShipOrder.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdShipOrder_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtShipOrder.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtShipOrder.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDShipOrder = Mid(txtShipOrder.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;ShipOrder;&quot; &amp; mIDShipOrder, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtShipOrder.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtShipOrder.Tag = AddSQLRefIds(txtShipOrder.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtShipOrder.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtShipOrder.Tag = res.item(&quot;xml&quot;).value
      If (txtShipOrder.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtShipOrder.Text = res.item(&quot;brief&quot;).value
        mIDShipOrder = res.item(&quot;ID&quot;).value
        Call txtShipOrder_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtShipOrder.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdShipOrder_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;ShipOrder&quot;, txtShipOrder.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Validate(cancel as boolean)
if txttemp_in_track.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txttemp_in_track.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  elseif Val(txttemp_in_track.text) &lt; -922337203685477.5808 or Val(txttemp_in_track.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  end if
end if
end sub
Private Sub txttemp_in_track_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_RULE&quot;, id, brief) Then
          txtThePartyRule.Tag = Left(id, 38)
          txtThePartyRule = brief
        End If
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
          txtThePartyRule.Tag = &quot;&quot;
          txtThePartyRule = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtShipOrder.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpProcessDate.value)
if mIsOK then mIsOK = txtThePartyRule.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtShipOrder.Text =&quot;&quot;
txtShipOrder.Tag =&quot;&quot;
mIDShipOrder =&quot;&quot;
' Разобрать XML
Dim XMLDocShipOrder As New DOMDocument
On Error Resume Next
If (item.ShipOrder &lt;&gt; &quot;&quot;) Then
  Call XMLDocShipOrder.loadXML(item.ShipOrder)
  If (Err.Number = 0 And XMLDocShipOrder.parseError.errorCode = 0) Then
    Dim nodeShipOrder As MSXML2.IXMLDOMNode
    txtShipOrder.Tag = item.ShipOrder
    For Each nodeShipOrder In XMLDocShipOrder.childNodes.item(0).childNodes
      If (nodeShipOrder.baseName = &quot;Brief&quot;) Then
       txtShipOrder.Text = nodeShipOrder.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDShipOrder As String
    newIDShipOrder = item.ShipOrder
    Dim XMLShipOrderID As String
    XMLShipOrderID = &quot;&lt;SQLData&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from shipping_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDShipOrder &amp; &quot;&lt;/ID&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;BriefFields&gt;НАЗВАНИЕ&lt;/BriefFields&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsShipOrder As New NamedValues
    Dim resShipOrder As NamedValues
    Call parsShipOrder.Add(&quot;xml&quot;, XMLShipOrderID)
    Set resShipOrder = item.Application.Manager.GetSQLDataDialog(parsShipOrder)
    If (Not resShipOrder Is Nothing) Then
      Dim resStrShipOrder As String
      resStrShipOrder = resShipOrder.item(&quot;RESULT&quot;).value
      If (resStrShipOrder = &quot;OK&quot;) Then
        txtShipOrder.Tag = Replace(resShipOrder.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtShipOrder.Text &lt;&gt; resShipOrder.item(&quot;brief&quot;).value) Then
          mIDShipOrder = newIDShipOrder
          txtShipOrder.Text = resShipOrder.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.ShipOrder = vbNullString
    End If
  End If
Else
  Dim XMLShipOrder As String
  XMLShipOrder = &quot;&lt;SQLData&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from shipping_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;BriefFields&gt;НАЗВАНИЕ&lt;/BriefFields&gt;&quot;
    XMLShipOrder = XMLShipOrder &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;/SQLData&gt;&quot;
  txtShipOrder.Tag = XMLShipOrder
End if 
On Error GoTo 0
 LoadBtnPictures cmdShipOrder,cmdShipOrder.tag
  cmdShipOrder.RemoveAllMenu
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from SHIPPING_ORDER join partner on SHIPPING_ORDER.partner_id=partner.id where SHIPPING_ORDER.ID='%ShipOrderID%' &lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ShipOrderID&gt;&quot; &amp; mIDShipOrder &amp; &quot;&lt;/ShipOrderID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from SHIPPING_ORDER join partner on SHIPPING_ORDER.partner_id=partner.id where SHIPPING_ORDER.ID='%ShipOrderID%' &lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;ShipOrderID&gt;&quot; &amp; mIDShipOrder &amp; &quot;&lt;/ShipOrderID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;ShipOrder&quot;, txtShipOrder.Tag)
txtShipOrder.Tag = AddSQLRefIds(txtShipOrder.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.ShipOrder = txtShipOrder.Tag
item.TheClient = txtTheClient.Tag
  if  isnull(dtpProcessDate) then
    item.ProcessDate = 0
  else
    item.ProcessDate = dtpProcessDate.value
  end if
item.Supplier = txtSupplier
item.TTN = txtTTN
  if  isnull(dtpTTNDate) then
    item.TTNDate = 0
  else
    item.TTNDate = dtpTTNDate.value
  end if
item.TranspNumber = txtTranspNumber
item.Container = txtContainer
item.StampNumber = txtStampNumber
item.StampStatus = txtStampStatus
  if  isnull(dtpTrack_time_in) then
    item.Track_time_in = 0
  else
    item.Track_time_in = dtpTrack_time_in.value
  end if
  if  isnull(dtptrack_time_out) then
    item.track_time_out = 0
  else
    item.track_time_out = dtptrack_time_out.value
  end if
item.temp_in_track = cdbl(txttemp_in_track)
If txtThePartyRule.Tag &lt;&gt; &quot;&quot; Then
  Set item.ThePartyRule = Item.Application.FindRowObject(&quot;ITTD_RULE&quot;,txtThePartyRule.Tag)
Else
  Set item.ThePartyRule = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_EPL" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты КГ.:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalet_ID"/><Properties Name="Caption" PropValue="Идентификатор палеты:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPalet_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtPalet_ID_Validate(cancel as boolean)
if txtPalet_ID.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalet_ID.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalet_ID.SetFocus 
  elseif Val(txtPalet_ID.text) &lt;&gt;clng(Val(txtPalet_ID.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalet_ID.SetFocus 
  end if
end if
end sub
Private Sub txtPalet_ID_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalet_ID_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheNumber.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPalWeight.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
txtPalet_ID = item.Palet_ID
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
item.PalWeight = cdbl(txtPalWeight)
item.Palet_ID = cdbl(txtPalet_ID)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_LINES" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6045"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuanity"/><Properties Name="Caption" PropValue="Количество коробов:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQuanity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNumInBufZone"/><Properties Name="Caption" PropValue="Номер в буферной зоне:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtNumInBufZone"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер в буферной зоне"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblgood_ID"/><Properties Name="Caption" PropValue="Идентификатор товара:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtgood_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdgood_ID"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 
  private mIDgood_ID as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_ID_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot;WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittout_def.item(1).ShipOrder )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_ID_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtCurValue_Validate(cancel as boolean)
if txtCurValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCurValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  elseif Val(txtCurValue.text) &lt; -922337203685477.5808 or Val(txtCurValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  end if
end if
end sub
Private Sub txtCurValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTOUT_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief,,,&quot;ITTD_FACTORY_Country_ID='&quot; &amp; txtmade_country.tag &amp; &quot;'&quot;) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief,,,&quot;ITTD_KILLPLACE_Factory_ID='&quot; &amp; txtFactory.tag &amp; &quot;'&quot;) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtQuanity_Validate(cancel as boolean)
if txtQuanity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuanity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuanity.SetFocus 
  elseif Val(txtQuanity.text) &lt;&gt;clng(Val(txtQuanity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuanity.SetFocus 
  end if
end if
end sub
Private Sub txtQuanity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuanity_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtNumInBufZone_Change()
  Changing

end sub
private sub txtgood_ID_Change()
  if  not (OnInit) then 
If (txtgood_ID.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtgood_ID.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtgood_ID.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtgood_ID.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%good_IDID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdgood_ID_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtgood_ID.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtgood_ID.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDgood_ID = Mid(txtgood_ID.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;good_ID;&quot; &amp; mIDgood_ID, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtgood_ID.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtgood_ID.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtgood_ID.Tag = res.item(&quot;xml&quot;).value
      If (txtgood_ID.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtgood_ID.Text = res.item(&quot;brief&quot;).value
        mIDgood_ID = res.item(&quot;ID&quot;).value
        Call txtgood_ID_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtsequence.text)
if mIsOK then mIsOK = txtLineAtQuery.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtQRY_NUM.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtCurValue.text)
if mIsOK then mIsOK = IsSet(dtpMade_date.value)
if mIsOK then mIsOK = IsSet(txtPackageWeight.text)
if mIsOK then mIsOK = IsSet(dtpexp_date.value)
if mIsOK then mIsOK = IsSet(txtQuanity.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код заказа], A.QTY_ORD [Количество] , B.DESCRIPTION [Название] from shipping_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код заказа], A.QTY_ORD [Количество] , B.DESCRIPTION [Название] from shipping_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
  on error resume next
txtedizm = item.edizm
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
txtPackageWeight = item.PackageWeight
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
end if
txtQuanity = item.Quanity
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtNumInBufZone = item.NumInBufZone
txtgood_ID.Text =&quot;&quot;
txtgood_ID.Tag =&quot;&quot;
mIDgood_ID =&quot;&quot;
' Разобрать XML
Dim XMLDocgood_ID As New DOMDocument
On Error Resume Next
If (item.good_ID &lt;&gt; &quot;&quot;) Then
  Call XMLDocgood_ID.loadXML(item.good_ID)
  If (Err.Number = 0 And XMLDocgood_ID.parseError.errorCode = 0) Then
    Dim nodegood_ID As MSXML2.IXMLDOMNode
    txtgood_ID.Tag = item.good_ID
    For Each nodegood_ID In XMLDocgood_ID.childNodes.item(0).childNodes
      If (nodegood_ID.baseName = &quot;Brief&quot;) Then
       txtgood_ID.Text = nodegood_ID.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDgood_ID As String
    newIDgood_ID = item.good_ID
    Dim XMLgood_IDID As String
    XMLgood_IDID = &quot;&lt;SQLData&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;query&gt;select  item_id from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDgood_ID &amp; &quot;&lt;/ID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsgood_ID As New NamedValues
    Dim resgood_ID As NamedValues
    Call parsgood_ID.Add(&quot;xml&quot;, XMLgood_IDID)
    Set resgood_ID = item.Application.Manager.GetSQLDataDialog(parsgood_ID)
    If (Not resgood_ID Is Nothing) Then
      Dim resStrgood_ID As String
      resStrgood_ID = resgood_ID.item(&quot;RESULT&quot;).value
      If (resStrgood_ID = &quot;OK&quot;) Then
        txtgood_ID.Tag = Replace(resgood_ID.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtgood_ID.Text &lt;&gt; resgood_ID.item(&quot;brief&quot;).value) Then
          mIDgood_ID = newIDgood_ID
          txtgood_ID.Text = resgood_ID.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.good_ID = vbNullString
    End If
  End If
Else
  Dim XMLgood_ID As String
  XMLgood_ID = &quot;&lt;SQLData&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;query&gt;select  item_id from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_ID = XMLgood_ID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_ID = XMLgood_ID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;/SQLData&gt;&quot;
  txtgood_ID.Tag = XMLgood_ID
  Call cmdgood_ID_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdgood_ID,cmdgood_ID.tag
  cmdgood_ID.RemoveAllMenu
  cmdgood_ID.Visible = false 
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
item.CurValue = cdbl(txtCurValue)
item.articul = txtarticul
item.edizm = txtedizm
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
item.PackageWeight = cdbl(txtPackageWeight)
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.Quanity = cdbl(txtQuanity)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
item.NumInBufZone = txtNumInBufZone
item.good_ID = txtgood_ID.Tag
 if cmbNavalom.listindex&gt;=0 then
   item.Navalom = cmbNavalom.itemdata(cmbNavalom.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_PALET" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес БРУТТО с палетой КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес БРУТТО с палетой КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsEmpty"/><Properties Name="Caption" PropValue="Отгружена полностью:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsEmpty"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Отгружена полностью"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferCell"/><Properties Name="Caption" PropValue="Адрес буферной ячейки:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferCell"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Адрес буферной ячейки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStoreCell"/><Properties Name="Caption" PropValue="Адрес основной ячейки:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStoreCell"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Адрес основной ячейки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgCaliberQuantity"/><Properties Name="Caption" PropValue="Количество оставшихся коробов:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReorgCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество оставшихся коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgWeight"/><Properties Name="Caption" PropValue="Вес оставшегося груза с поддоном КГ.:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtReorgWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес оставшегося груза с поддоном КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgPackageFullWeight"/><Properties Name="Caption" PropValue="Суммарный вес оставшейся упаковки КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtReorgPackageFullWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес оставшейся упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный товар:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSSCC"/><Properties Name="Caption" PropValue="SSCC код:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSSCC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="18"/><Properties Name="ToolTipText" PropValue="SSCC код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBarCode1"/><Properties Name="Caption" PropValue="Bar Code 1:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBarCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Bar Code 1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBarCode2"/><Properties Name="Caption" PropValue="Bar Code 2:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBarCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Bar Code 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTOUT_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Validate(cancel as boolean)
if txtCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  elseif Val(txtCaliberQuantity.text) &lt;&gt;clng(Val(txtCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Validate(cancel as boolean)
if txtGoodWithPaletWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtGoodWithPaletWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  elseif Val(txtGoodWithPaletWeight.text) &lt; -922337203685477.5808 or Val(txtGoodWithPaletWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  end if
end if
end sub
Private Sub txtGoodWithPaletWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub cmbIsEmpty_Click()
  on error resume next
  Changing

end sub
private sub txtBufferCell_Change()
  Changing

end sub
private sub txtStoreCell_Change()
  Changing

end sub
private sub txtReorgCaliberQuantity_Validate(cancel as boolean)
if txtReorgCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReorgCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgCaliberQuantity.SetFocus 
  elseif Val(txtReorgCaliberQuantity.text) &lt;&gt;clng(Val(txtReorgCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtReorgCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReorgCaliberQuantity_Change()
  Changing

end sub
private sub txtReorgWeight_Validate(cancel as boolean)
if txtReorgWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReorgWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgWeight.SetFocus 
  elseif Val(txtReorgWeight.text) &lt; -922337203685477.5808 or Val(txtReorgWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgWeight.SetFocus 
  end if
end if
end sub
Private Sub txtReorgWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReorgWeight_Change()
  Changing

end sub
private sub txtReorgPackageFullWeight_Validate(cancel as boolean)
if txtReorgPackageFullWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReorgPackageFullWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgPackageFullWeight.SetFocus 
  elseif Val(txtReorgPackageFullWeight.text) &lt; -922337203685477.5808 or Val(txtReorgPackageFullWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgPackageFullWeight.SetFocus 
  end if
end if
end sub
Private Sub txtReorgPackageFullWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReorgPackageFullWeight_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing

end sub
private sub txtSSCC_Change()
  Changing

end sub
private sub txtBarCode1_Change()
  Changing

end sub
private sub txtBarCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtsequence.text)
if mIsOK then mIsOK = txtTheNumber.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpMade_date.value)
if mIsOK then mIsOK = IsSet(dtpexp_date.value)
if mIsOK then mIsOK = IsSet(txtCaliberQuantity.text)
if mIsOK then mIsOK =(cmbIsEmpty.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
end if
txtCaliberQuantity = item.CaliberQuantity
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
cmbIsEmpty.Clear
cmbIsEmpty.additem &quot;Да&quot;
cmbIsEmpty.itemdata(cmbIsEmpty.newindex)= -1
cmbIsEmpty.additem &quot;Нет&quot;
cmbIsEmpty.itemdata(cmbIsEmpty.newindex)= 0
 For iii = 0 To cmbIsEmpty.ListCount-1
  If Item.IsEmpty = cmbIsEmpty.ItemData(iii) Then
   cmbIsEmpty.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtBufferCell = item.BufferCell
  on error resume next
txtStoreCell = item.StoreCell
txtReorgCaliberQuantity = item.ReorgCaliberQuantity
txtReorgWeight = item.ReorgWeight
txtReorgPackageFullWeight = item.ReorgPackageFullWeight
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtSSCC = item.SSCC
  on error resume next
txtBarCode1 = item.BarCode1
  on error resume next
txtBarCode2 = item.BarCode2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.CaliberQuantity = cdbl(txtCaliberQuantity)
item.GoodWithPaletWeight = cdbl(txtGoodWithPaletWeight)
item.PackageWeight = cdbl(txtPackageWeight)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
 if cmbIsEmpty.listindex&gt;=0 then
   item.IsEmpty = cmbIsEmpty.itemdata(cmbIsEmpty.listindex)
 end if
item.BufferCell = txtBufferCell
item.StoreCell = txtStoreCell
item.ReorgCaliberQuantity = cdbl(txtReorgCaliberQuantity)
item.ReorgWeight = cdbl(txtReorgWeight)
item.ReorgPackageFullWeight = cdbl(txtReorgPackageFullWeight)
 if cmbIsBrak.listindex&gt;=0 then
   item.IsBrak = cmbIsBrak.itemdata(cmbIsBrak.listindex)
 end if
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
item.SSCC = txtSSCC
item.BarCode1 = txtBarCode1
item.BarCode2 = txtBarCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_SRVadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_SRV&quot;, id, brief) Then
          txtSRV.Tag = Left(id, 38)
          txtSRV = brief
        End If
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
          txtSRV.Tag = &quot;&quot;
          txtSRV = &quot;&quot;
End sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtSRV.Tag &lt;&gt; &quot;&quot; Then
  Set item.SRV = Item.Application.FindRowObject(&quot;ITTD_SRV&quot;,txtSRV.Tag)
Else
  Set item.SRV = Nothing
End If
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_DEFadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblShipOrder"/><Properties Name="Caption" PropValue="Заказ на отгрузку:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtShipOrder"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Заказ на отгрузку"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdShipOrder"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Заказ на отгрузку"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDShipOrder as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtShipOrder_Change()
  if  not (OnInit) then 
If (txtShipOrder.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtShipOrder.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtShipOrder.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtShipOrder.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdShipOrder_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtShipOrder.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtShipOrder.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDShipOrder = Mid(txtShipOrder.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;ShipOrder;&quot; &amp; mIDShipOrder, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtShipOrder.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtShipOrder.Tag = AddSQLRefIds(txtShipOrder.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtShipOrder.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtShipOrder.Tag = res.item(&quot;xml&quot;).value
      If (txtShipOrder.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtShipOrder.Text = res.item(&quot;brief&quot;).value
        mIDShipOrder = res.item(&quot;ID&quot;).value
        Call txtShipOrder_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtShipOrder.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdShipOrder_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;ShipOrder&quot;, txtShipOrder.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Validate(cancel as boolean)
if txttemp_in_track.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txttemp_in_track.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  elseif Val(txttemp_in_track.text) &lt; -922337203685477.5808 or Val(txttemp_in_track.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  end if
end if
end sub
Private Sub txttemp_in_track_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_RULE&quot;, id, brief) Then
          txtThePartyRule.Tag = Left(id, 38)
          txtThePartyRule = brief
        End If
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
          txtThePartyRule.Tag = &quot;&quot;
          txtThePartyRule = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtShipOrder.Text =&quot;&quot;
txtShipOrder.Tag =&quot;&quot;
mIDShipOrder =&quot;&quot;
' Разобрать XML
Dim XMLDocShipOrder As New DOMDocument
On Error Resume Next
If (item.ShipOrder &lt;&gt; &quot;&quot;) Then
  Call XMLDocShipOrder.loadXML(item.ShipOrder)
  If (Err.Number = 0 And XMLDocShipOrder.parseError.errorCode = 0) Then
    Dim nodeShipOrder As MSXML2.IXMLDOMNode
    txtShipOrder.Tag = item.ShipOrder
    For Each nodeShipOrder In XMLDocShipOrder.childNodes.item(0).childNodes
      If (nodeShipOrder.baseName = &quot;Brief&quot;) Then
       txtShipOrder.Text = nodeShipOrder.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDShipOrder As String
    newIDShipOrder = item.ShipOrder
    Dim XMLShipOrderID As String
    XMLShipOrderID = &quot;&lt;SQLData&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from shipping_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDShipOrder &amp; &quot;&lt;/ID&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;BriefFields&gt;НАЗВАНИЕ&lt;/BriefFields&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsShipOrder As New NamedValues
    Dim resShipOrder As NamedValues
    Call parsShipOrder.Add(&quot;xml&quot;, XMLShipOrderID)
    Set resShipOrder = item.Application.Manager.GetSQLDataDialog(parsShipOrder)
    If (Not resShipOrder Is Nothing) Then
      Dim resStrShipOrder As String
      resStrShipOrder = resShipOrder.item(&quot;RESULT&quot;).value
      If (resStrShipOrder = &quot;OK&quot;) Then
        txtShipOrder.Tag = Replace(resShipOrder.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtShipOrder.Text &lt;&gt; resShipOrder.item(&quot;brief&quot;).value) Then
          mIDShipOrder = newIDShipOrder
          txtShipOrder.Text = resShipOrder.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.ShipOrder = vbNullString
    End If
  End If
Else
  Dim XMLShipOrder As String
  XMLShipOrder = &quot;&lt;SQLData&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from shipping_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;BriefFields&gt;НАЗВАНИЕ&lt;/BriefFields&gt;&quot;
    XMLShipOrder = XMLShipOrder &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;/SQLData&gt;&quot;
  txtShipOrder.Tag = XMLShipOrder
End if 
On Error GoTo 0
 LoadBtnPictures cmdShipOrder,cmdShipOrder.tag
  cmdShipOrder.RemoveAllMenu
  cmdShipOrder.AddMenu &quot;Очистить&quot; 
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from SHIPPING_ORDER join partner on SHIPPING_ORDER.partner_id=partner.id where SHIPPING_ORDER.ID='%ShipOrderID%' &lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ShipOrderID&gt;&quot; &amp; mIDShipOrder &amp; &quot;&lt;/ShipOrderID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from SHIPPING_ORDER join partner on SHIPPING_ORDER.partner_id=partner.id where SHIPPING_ORDER.ID='%ShipOrderID%' &lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;ShipOrderID&gt;&quot; &amp; mIDShipOrder &amp; &quot;&lt;/ShipOrderID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
else
 dtpProcessDate.value = null
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;ShipOrder&quot;, txtShipOrder.Tag)
txtShipOrder.Tag = AddSQLRefIds(txtShipOrder.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.ShipOrder = txtShipOrder.Tag
item.TheClient = txtTheClient.Tag
  if  isnull(dtpProcessDate) then
    item.ProcessDate = 0
  else
    item.ProcessDate = dtpProcessDate.value
  end if
item.Supplier = txtSupplier
item.TTN = txtTTN
  if  isnull(dtpTTNDate) then
    item.TTNDate = 0
  else
    item.TTNDate = dtpTTNDate.value
  end if
item.TranspNumber = txtTranspNumber
item.Container = txtContainer
item.StampNumber = txtStampNumber
item.StampStatus = txtStampStatus
  if  isnull(dtpTrack_time_in) then
    item.Track_time_in = 0
  else
    item.Track_time_in = dtpTrack_time_in.value
  end if
  if  isnull(dtptrack_time_out) then
    item.track_time_out = 0
  else
    item.track_time_out = dtptrack_time_out.value
  end if
item.temp_in_track = cdbl(txttemp_in_track)
If txtThePartyRule.Tag &lt;&gt; &quot;&quot; Then
  Set item.ThePartyRule = Item.Application.FindRowObject(&quot;ITTD_RULE&quot;,txtThePartyRule.Tag)
Else
  Set item.ThePartyRule = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_EPLadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты КГ.:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalet_ID"/><Properties Name="Caption" PropValue="Идентификатор палеты:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPalet_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtPalet_ID_Validate(cancel as boolean)
if txtPalet_ID.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalet_ID.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalet_ID.SetFocus 
  elseif Val(txtPalet_ID.text) &lt;&gt;clng(Val(txtPalet_ID.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalet_ID.SetFocus 
  end if
end if
end sub
Private Sub txtPalet_ID_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalet_ID_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
txtPalet_ID = item.Palet_ID
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
item.PalWeight = cdbl(txtPalWeight)
item.Palet_ID = cdbl(txtPalet_ID)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_LINESadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6045"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuanity"/><Properties Name="Caption" PropValue="Количество коробов:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQuanity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNumInBufZone"/><Properties Name="Caption" PropValue="Номер в буферной зоне:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtNumInBufZone"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер в буферной зоне"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblgood_ID"/><Properties Name="Caption" PropValue="Идентификатор товара:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtgood_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdgood_ID"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 
  private mIDgood_ID as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_ID_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot;WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittout_def.item(1).ShipOrder )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_ID_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtCurValue_Validate(cancel as boolean)
if txtCurValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCurValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  elseif Val(txtCurValue.text) &lt; -922337203685477.5808 or Val(txtCurValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  end if
end if
end sub
Private Sub txtCurValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTOUT_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief,,,&quot;ITTD_FACTORY_Country_ID='&quot; &amp; txtmade_country.tag &amp; &quot;'&quot;) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief,,,&quot;ITTD_KILLPLACE_Factory_ID='&quot; &amp; txtFactory.tag &amp; &quot;'&quot;) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtQuanity_Validate(cancel as boolean)
if txtQuanity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuanity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuanity.SetFocus 
  elseif Val(txtQuanity.text) &lt;&gt;clng(Val(txtQuanity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuanity.SetFocus 
  end if
end if
end sub
Private Sub txtQuanity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuanity_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtNumInBufZone_Change()
  Changing

end sub
private sub txtgood_ID_Change()
  if  not (OnInit) then 
If (txtgood_ID.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtgood_ID.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtgood_ID.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtgood_ID.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%good_IDID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdgood_ID_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtgood_ID.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtgood_ID.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDgood_ID = Mid(txtgood_ID.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;good_ID;&quot; &amp; mIDgood_ID, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtgood_ID.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtgood_ID.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtgood_ID.Tag = res.item(&quot;xml&quot;).value
      If (txtgood_ID.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtgood_ID.Text = res.item(&quot;brief&quot;).value
        mIDgood_ID = res.item(&quot;ID&quot;).value
        Call txtgood_ID_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код заказа], A.QTY_ORD [Количество] , B.DESCRIPTION [Название] from shipping_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код заказа], A.QTY_ORD [Количество] , B.DESCRIPTION [Название] from shipping_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
  cmdLineAtQuery.AddMenu &quot;Очистить&quot; 
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
  on error resume next
txtedizm = item.edizm
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
txtPackageWeight = item.PackageWeight
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtQuanity = item.Quanity
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtNumInBufZone = item.NumInBufZone
txtgood_ID.Text =&quot;&quot;
txtgood_ID.Tag =&quot;&quot;
mIDgood_ID =&quot;&quot;
' Разобрать XML
Dim XMLDocgood_ID As New DOMDocument
On Error Resume Next
If (item.good_ID &lt;&gt; &quot;&quot;) Then
  Call XMLDocgood_ID.loadXML(item.good_ID)
  If (Err.Number = 0 And XMLDocgood_ID.parseError.errorCode = 0) Then
    Dim nodegood_ID As MSXML2.IXMLDOMNode
    txtgood_ID.Tag = item.good_ID
    For Each nodegood_ID In XMLDocgood_ID.childNodes.item(0).childNodes
      If (nodegood_ID.baseName = &quot;Brief&quot;) Then
       txtgood_ID.Text = nodegood_ID.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDgood_ID As String
    newIDgood_ID = item.good_ID
    Dim XMLgood_IDID As String
    XMLgood_IDID = &quot;&lt;SQLData&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;query&gt;select  item_id from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDgood_ID &amp; &quot;&lt;/ID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsgood_ID As New NamedValues
    Dim resgood_ID As NamedValues
    Call parsgood_ID.Add(&quot;xml&quot;, XMLgood_IDID)
    Set resgood_ID = item.Application.Manager.GetSQLDataDialog(parsgood_ID)
    If (Not resgood_ID Is Nothing) Then
      Dim resStrgood_ID As String
      resStrgood_ID = resgood_ID.item(&quot;RESULT&quot;).value
      If (resStrgood_ID = &quot;OK&quot;) Then
        txtgood_ID.Tag = Replace(resgood_ID.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtgood_ID.Text &lt;&gt; resgood_ID.item(&quot;brief&quot;).value) Then
          mIDgood_ID = newIDgood_ID
          txtgood_ID.Text = resgood_ID.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.good_ID = vbNullString
    End If
  End If
Else
  Dim XMLgood_ID As String
  XMLgood_ID = &quot;&lt;SQLData&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;query&gt;select  item_id from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_ID = XMLgood_ID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_ID = XMLgood_ID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;/SQLData&gt;&quot;
  txtgood_ID.Tag = XMLgood_ID
  Call cmdgood_ID_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdgood_ID,cmdgood_ID.tag
  cmdgood_ID.RemoveAllMenu
  cmdgood_ID.Visible = false 
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
item.CurValue = cdbl(txtCurValue)
item.articul = txtarticul
item.edizm = txtedizm
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
item.PackageWeight = cdbl(txtPackageWeight)
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.Quanity = cdbl(txtQuanity)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
item.NumInBufZone = txtNumInBufZone
item.good_ID = txtgood_ID.Tag
 if cmbNavalom.listindex&gt;=0 then
   item.Navalom = cmbNavalom.itemdata(cmbNavalom.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_PALETadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес БРУТТО с палетой КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес БРУТТО с палетой КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsEmpty"/><Properties Name="Caption" PropValue="Отгружена полностью:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsEmpty"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Отгружена полностью"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferCell"/><Properties Name="Caption" PropValue="Адрес буферной ячейки:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferCell"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Адрес буферной ячейки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStoreCell"/><Properties Name="Caption" PropValue="Адрес основной ячейки:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStoreCell"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Адрес основной ячейки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgCaliberQuantity"/><Properties Name="Caption" PropValue="Количество оставшихся коробов:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReorgCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество оставшихся коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgWeight"/><Properties Name="Caption" PropValue="Вес оставшегося груза с поддоном КГ.:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtReorgWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес оставшегося груза с поддоном КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgPackageFullWeight"/><Properties Name="Caption" PropValue="Суммарный вес оставшейся упаковки КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtReorgPackageFullWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес оставшейся упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный товар:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTOUT_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Validate(cancel as boolean)
if txtCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  elseif Val(txtCaliberQuantity.text) &lt;&gt;clng(Val(txtCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Validate(cancel as boolean)
if txtGoodWithPaletWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtGoodWithPaletWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  elseif Val(txtGoodWithPaletWeight.text) &lt; -922337203685477.5808 or Val(txtGoodWithPaletWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  end if
end if
end sub
Private Sub txtGoodWithPaletWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub cmbIsEmpty_Click()
  on error resume next
  Changing

end sub
private sub txtBufferCell_Change()
  Changing

end sub
private sub txtStoreCell_Change()
  Changing

end sub
private sub txtReorgCaliberQuantity_Validate(cancel as boolean)
if txtReorgCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReorgCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgCaliberQuantity.SetFocus 
  elseif Val(txtReorgCaliberQuantity.text) &lt;&gt;clng(Val(txtReorgCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtReorgCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReorgCaliberQuantity_Change()
  Changing

end sub
private sub txtReorgWeight_Validate(cancel as boolean)
if txtReorgWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReorgWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgWeight.SetFocus 
  elseif Val(txtReorgWeight.text) &lt; -922337203685477.5808 or Val(txtReorgWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgWeight.SetFocus 
  end if
end if
end sub
Private Sub txtReorgWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReorgWeight_Change()
  Changing

end sub
private sub txtReorgPackageFullWeight_Validate(cancel as boolean)
if txtReorgPackageFullWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReorgPackageFullWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgPackageFullWeight.SetFocus 
  elseif Val(txtReorgPackageFullWeight.text) &lt; -922337203685477.5808 or Val(txtReorgPackageFullWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReorgPackageFullWeight.SetFocus 
  end if
end if
end sub
Private Sub txtReorgPackageFullWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReorgPackageFullWeight_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtCaliberQuantity = item.CaliberQuantity
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
cmbIsEmpty.Clear
cmbIsEmpty.additem &quot;Да&quot;
cmbIsEmpty.itemdata(cmbIsEmpty.newindex)= -1
cmbIsEmpty.additem &quot;Нет&quot;
cmbIsEmpty.itemdata(cmbIsEmpty.newindex)= 0
 For iii = 0 To cmbIsEmpty.ListCount-1
  If Item.IsEmpty = cmbIsEmpty.ItemData(iii) Then
   cmbIsEmpty.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtBufferCell = item.BufferCell
  on error resume next
txtStoreCell = item.StoreCell
txtReorgCaliberQuantity = item.ReorgCaliberQuantity
txtReorgWeight = item.ReorgWeight
txtReorgPackageFullWeight = item.ReorgPackageFullWeight
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.CaliberQuantity = cdbl(txtCaliberQuantity)
item.GoodWithPaletWeight = cdbl(txtGoodWithPaletWeight)
item.PackageWeight = cdbl(txtPackageWeight)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
 if cmbIsEmpty.listindex&gt;=0 then
   item.IsEmpty = cmbIsEmpty.itemdata(cmbIsEmpty.listindex)
 end if
item.BufferCell = txtBufferCell
item.StoreCell = txtStoreCell
item.ReorgCaliberQuantity = cdbl(txtReorgCaliberQuantity)
item.ReorgWeight = cdbl(txtReorgWeight)
item.ReorgPackageFullWeight = cdbl(txtReorgPackageFullWeight)
 if cmbIsBrak.listindex&gt;=0 then
   item.IsBrak = cmbIsBrak.itemdata(cmbIsBrak.listindex)
 end if
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_SRVmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_DEFmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblShipOrder"/><Properties Name="Caption" PropValue="Заказ на отгрузку:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtShipOrder"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Заказ на отгрузку"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdShipOrder"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Заказ на отгрузку"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDShipOrder as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtShipOrder_Change()
  if  not (OnInit) then 
If (txtShipOrder.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtShipOrder.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtShipOrder.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtShipOrder.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdShipOrder_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtShipOrder.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtShipOrder.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDShipOrder = Mid(txtShipOrder.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;ShipOrder;&quot; &amp; mIDShipOrder, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtShipOrder.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtShipOrder.Tag = AddSQLRefIds(txtShipOrder.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtShipOrder.Tag = Replace(txtShipOrder.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtShipOrder.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtShipOrder.Tag = res.item(&quot;xml&quot;).value
      If (txtShipOrder.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtShipOrder.Text = res.item(&quot;brief&quot;).value
        mIDShipOrder = res.item(&quot;ID&quot;).value
        Call txtShipOrder_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtShipOrder.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdShipOrder_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;ShipOrder&quot;, txtShipOrder.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtShipOrder.Text =&quot;&quot;
txtShipOrder.Tag =&quot;&quot;
mIDShipOrder =&quot;&quot;
' Разобрать XML
Dim XMLDocShipOrder As New DOMDocument
On Error Resume Next
If (item.ShipOrder &lt;&gt; &quot;&quot;) Then
  Call XMLDocShipOrder.loadXML(item.ShipOrder)
  If (Err.Number = 0 And XMLDocShipOrder.parseError.errorCode = 0) Then
    Dim nodeShipOrder As MSXML2.IXMLDOMNode
    txtShipOrder.Tag = item.ShipOrder
    For Each nodeShipOrder In XMLDocShipOrder.childNodes.item(0).childNodes
      If (nodeShipOrder.baseName = &quot;Brief&quot;) Then
       txtShipOrder.Text = nodeShipOrder.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDShipOrder As String
    newIDShipOrder = item.ShipOrder
    Dim XMLShipOrderID As String
    XMLShipOrderID = &quot;&lt;SQLData&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from shipping_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDShipOrder &amp; &quot;&lt;/ID&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;BriefFields&gt;НАЗВАНИЕ&lt;/BriefFields&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLShipOrderID = XMLShipOrderID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsShipOrder As New NamedValues
    Dim resShipOrder As NamedValues
    Call parsShipOrder.Add(&quot;xml&quot;, XMLShipOrderID)
    Set resShipOrder = item.Application.Manager.GetSQLDataDialog(parsShipOrder)
    If (Not resShipOrder Is Nothing) Then
      Dim resStrShipOrder As String
      resStrShipOrder = resShipOrder.item(&quot;RESULT&quot;).value
      If (resStrShipOrder = &quot;OK&quot;) Then
        txtShipOrder.Tag = Replace(resShipOrder.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtShipOrder.Text &lt;&gt; resShipOrder.item(&quot;brief&quot;).value) Then
          mIDShipOrder = newIDShipOrder
          txtShipOrder.Text = resShipOrder.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.ShipOrder = vbNullString
    End If
  End If
Else
  Dim XMLShipOrder As String
  XMLShipOrder = &quot;&lt;SQLData&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from shipping_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;BriefFields&gt;НАЗВАНИЕ&lt;/BriefFields&gt;&quot;
    XMLShipOrder = XMLShipOrder &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLShipOrder = XMLShipOrder &amp; &quot;&lt;/SQLData&gt;&quot;
  txtShipOrder.Tag = XMLShipOrder
End if 
On Error GoTo 0
 LoadBtnPictures cmdShipOrder,cmdShipOrder.tag
  cmdShipOrder.RemoveAllMenu
  cmdShipOrder.AddMenu &quot;Очистить&quot; 
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from SHIPPING_ORDER join partner on SHIPPING_ORDER.partner_id=partner.id where SHIPPING_ORDER.ID='%ShipOrderID%' &lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ShipOrderID&gt;&quot; &amp; mIDShipOrder &amp; &quot;&lt;/ShipOrderID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from SHIPPING_ORDER join partner on SHIPPING_ORDER.partner_id=partner.id where SHIPPING_ORDER.ID='%ShipOrderID%' &lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;ShipOrderID&gt;&quot; &amp; mIDShipOrder &amp; &quot;&lt;/ShipOrderID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
else
 dtpProcessDate.value = null
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;ShipOrder&quot;, txtShipOrder.Tag)
txtShipOrder.Tag = AddSQLRefIds(txtShipOrder.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.ShipOrder = txtShipOrder.Tag
item.TheClient = txtTheClient.Tag
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_EPLmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты КГ.:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalet_ID"/><Properties Name="Caption" PropValue="Идентификатор палеты:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPalet_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtPalet_ID_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
txtPalet_ID = item.Palet_ID
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_LINESmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6045"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuanity"/><Properties Name="Caption" PropValue="Количество коробов:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQuanity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNumInBufZone"/><Properties Name="Caption" PropValue="Номер в буферной зоне:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtNumInBufZone"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер в буферной зоне"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblgood_ID"/><Properties Name="Caption" PropValue="Идентификатор товара:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtgood_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdgood_ID"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 
  private mIDgood_ID as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_ID_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot;WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittout_def.item(1).ShipOrder )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_ID_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtQuanity_Change()
  Changing

end sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtNumInBufZone_Change()
  Changing

end sub
private sub txtgood_ID_Change()
  if  not (OnInit) then 
If (txtgood_ID.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtgood_ID.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtgood_ID.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtgood_ID.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%good_IDID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdgood_ID_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtgood_ID.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtgood_ID.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDgood_ID = Mid(txtgood_ID.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;good_ID;&quot; &amp; mIDgood_ID, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtgood_ID.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtgood_ID.Tag = Replace(txtgood_ID.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtgood_ID.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtgood_ID.Tag = res.item(&quot;xml&quot;).value
      If (txtgood_ID.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtgood_ID.Text = res.item(&quot;brief&quot;).value
        mIDgood_ID = res.item(&quot;ID&quot;).value
        Call txtgood_ID_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код заказа], A.QTY_ORD [Количество] , B.DESCRIPTION [Название] from shipping_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код заказа], A.QTY_ORD [Количество] , B.DESCRIPTION [Название] from shipping_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
  cmdLineAtQuery.AddMenu &quot;Очистить&quot; 
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;good_IDID&gt;&quot; &amp; mIDgood_ID &amp; &quot;&lt;/good_IDID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
  on error resume next
txtedizm = item.edizm
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
txtPackageWeight = item.PackageWeight
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtQuanity = item.Quanity
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtNumInBufZone = item.NumInBufZone
txtgood_ID.Text =&quot;&quot;
txtgood_ID.Tag =&quot;&quot;
mIDgood_ID =&quot;&quot;
' Разобрать XML
Dim XMLDocgood_ID As New DOMDocument
On Error Resume Next
If (item.good_ID &lt;&gt; &quot;&quot;) Then
  Call XMLDocgood_ID.loadXML(item.good_ID)
  If (Err.Number = 0 And XMLDocgood_ID.parseError.errorCode = 0) Then
    Dim nodegood_ID As MSXML2.IXMLDOMNode
    txtgood_ID.Tag = item.good_ID
    For Each nodegood_ID In XMLDocgood_ID.childNodes.item(0).childNodes
      If (nodegood_ID.baseName = &quot;Brief&quot;) Then
       txtgood_ID.Text = nodegood_ID.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDgood_ID As String
    newIDgood_ID = item.good_ID
    Dim XMLgood_IDID As String
    XMLgood_IDID = &quot;&lt;SQLData&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;query&gt;select  item_id from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDgood_ID &amp; &quot;&lt;/ID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLgood_IDID = XMLgood_IDID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsgood_ID As New NamedValues
    Dim resgood_ID As NamedValues
    Call parsgood_ID.Add(&quot;xml&quot;, XMLgood_IDID)
    Set resgood_ID = item.Application.Manager.GetSQLDataDialog(parsgood_ID)
    If (Not resgood_ID Is Nothing) Then
      Dim resStrgood_ID As String
      resStrgood_ID = resgood_ID.item(&quot;RESULT&quot;).value
      If (resStrgood_ID = &quot;OK&quot;) Then
        txtgood_ID.Tag = Replace(resgood_ID.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtgood_ID.Text &lt;&gt; resgood_ID.item(&quot;brief&quot;).value) Then
          mIDgood_ID = newIDgood_ID
          txtgood_ID.Text = resgood_ID.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.good_ID = vbNullString
    End If
  End If
Else
  Dim XMLgood_ID As String
  XMLgood_ID = &quot;&lt;SQLData&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;query&gt;select  item_id from shipping_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_ID = XMLgood_ID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_ID = XMLgood_ID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLgood_ID = XMLgood_ID &amp; &quot;&lt;/SQLData&gt;&quot;
  txtgood_ID.Tag = XMLgood_ID
  Call cmdgood_ID_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdgood_ID,cmdgood_ID.tag
  cmdgood_ID.RemoveAllMenu
  cmdgood_ID.Visible = false 
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtgood_ID.Tag = AddSQLRefIds(txtgood_ID.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_ID&quot;, txtgood_ID.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
item.good_ID = txtgood_ID.Tag
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTOUT_PALETmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес БРУТТО с палетой КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес БРУТТО с палетой КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsEmpty"/><Properties Name="Caption" PropValue="Отгружена полностью:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsEmpty"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Отгружена полностью"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferCell"/><Properties Name="Caption" PropValue="Адрес буферной ячейки:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferCell"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Адрес буферной ячейки"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStoreCell"/><Properties Name="Caption" PropValue="Адрес основной ячейки:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStoreCell"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Адрес основной ячейки"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgCaliberQuantity"/><Properties Name="Caption" PropValue="Количество оставшихся коробов:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReorgCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество оставшихся коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgWeight"/><Properties Name="Caption" PropValue="Вес оставшегося груза с поддоном КГ.:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtReorgWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес оставшегося груза с поддоном КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReorgPackageFullWeight"/><Properties Name="Caption" PropValue="Суммарный вес оставшейся упаковки КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtReorgPackageFullWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес оставшейся упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный товар:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub cmbIsEmpty_Click()
  on error resume next
  Changing

end sub
private sub txtBufferCell_Change()
  Changing

end sub
private sub txtStoreCell_Change()
  Changing

end sub
private sub txtReorgCaliberQuantity_Change()
  Changing

end sub
private sub txtReorgWeight_Change()
  Changing

end sub
private sub txtReorgPackageFullWeight_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtCaliberQuantity = item.CaliberQuantity
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
cmbIsEmpty.Clear
cmbIsEmpty.additem &quot;Да&quot;
cmbIsEmpty.itemdata(cmbIsEmpty.newindex)= -1
cmbIsEmpty.additem &quot;Нет&quot;
cmbIsEmpty.itemdata(cmbIsEmpty.newindex)= 0
 For iii = 0 To cmbIsEmpty.ListCount-1
  If Item.IsEmpty = cmbIsEmpty.ItemData(iii) Then
   cmbIsEmpty.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtBufferCell = item.BufferCell
  on error resume next
txtStoreCell = item.StoreCell
txtReorgCaliberQuantity = item.ReorgCaliberQuantity
txtReorgWeight = item.ReorgWeight
txtReorgPackageFullWeight = item.ReorgPackageFullWeight
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_SRV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_SRV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_SRV режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot;
  Open s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_DEF_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_DEF"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_DEF режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot;
  Open s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_EPL_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_EPL"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_EPL режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot;
  Open s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_LINES_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_LINES"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_LINES режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot;
  Open s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_PALET_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_PALET"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_PALET режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot;
  Open s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_SRV_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_SRVadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_SRV режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot;
  Open s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_DEF_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_DEFadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_DEF режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot;
  Open s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_EPL_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_EPLadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_EPL режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot;
  Open s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_LINES_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_LINESadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_LINES режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot;
  Open s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_PALET_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_PALETadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_PALET режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot;
  Open s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_DEF_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTOUT_DEF" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_DEFadmi"><Properties Name="Name" PropValue="editITTOUT_DEF"/></ControlData><ControlData Name="cmdITTOUT_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_DEFRef_Click()
  on error resume next
  Item.ITTOUT_DEF.Refresh
  cmdITTOUT_DEFAdd_Click
End Sub
Private Sub cmdITTOUT_DEFCfg_Click()
    on error resume next 
    editITTOUT_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTOUT_editITTOUT_DEF_admi&quot; For Output As #ff
    print #ff, editITTOUT_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTOUT_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.ITTOUT_DEF.Count = 0 Then
   set u=Item.ITTOUT_DEF.Add
u.ProcessDate = date

 End If
 Set editITTOUT_DEF.Item = Item.ITTOUT_DEF.Item(1)
 editITTOUT_DEF.InitPanel
 cmdITTOUT_DEFSave.Enabled = True
End Sub
Private Sub cmdITTOUT_DEFDel_Click()
  on error resume next
  if  editITTOUT_DEF.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editITTOUT_DEF.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editITTOUT_DEF.item.parent.Delete editITTOUT_DEF.item.id
    cmdITTOUT_DEFSave.Enabled = false
    editITTOUT_DEF.Enabled = false
    set editITTOUT_DEF.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editITTOUT_DEF_Changed()
 cmdITTOUT_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTOUT_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTOUT_DEFSave_Click()
  on error resume next
    if editITTOUT_DEF.IsOK then
    MousePointer = vbHourglass
    editITTOUT_DEF.Save
  on error goto bye
    editITTOUT_DEF.item.Save
    MousePointer = vbNormal
    cmdITTOUT_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editITTOUT_DEF.item.REFRESH
  editITTOUT_DEF.InitPanel
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_DEFSave,cmdITTOUT_DEFSave.tag
  LoadBtnPictures cmdITTOUT_DEFRef,cmdITTOUT_DEFRef.tag
  LoadBtnPictures cmdITTOUT_DEFCfg,cmdITTOUT_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTOUT_editITTOUT_DEF_admi&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTOUT_DEF.PanelCustomisationString = buf
  cmdITTOUT_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTOUT_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTOUT_DEF.Save
if editITTOUT_DEF.item.Changed then
  editITTOUT_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTOUT_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_LINES_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_LINES" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTOUT_LINES"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTOUT_LINES" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_LINES"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_LINESAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_LINESPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_LINESCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_LINESFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_LINESRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_LINESAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTOUT_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_LINES" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTOUT_LINES"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_LINESAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_LINESEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_LINESOpen"/></ControlData><ControlData Name="mnuITTOUT_LINESRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESRef"/></ControlData><ControlData Name="mnuITTOUT_LINESS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_LINESS1"/></ControlData><ControlData Name="mnuITTOUT_LINESBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_LINESBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_LINESCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCOPY"/></ControlData><ControlData Name="mnuITTOUT_LINESCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCUT"/></ControlData><ControlData Name="mnuITTOUT_LINESPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESPASTE"/></ControlData><ControlData Name="mnuITTOUT_LINESCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCHANGE"/></ControlData><ControlData Name="mnuITTOUT_LINESCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_LINESPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESPrn"/></ControlData><ControlData Name="mnuITTOUT_LINESCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCfg"/></ControlData><ControlData Name="mnuITTOUT_LINESFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_LINESFind"/></ControlData><ControlData Name="mnuITTOUT_LINESAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_LINESAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_LINES" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_LINES"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTOUT_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTOUT_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_PALETEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_PALETOpen"/></ControlData><ControlData Name="mnuITTOUT_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETRef"/></ControlData><ControlData Name="mnuITTOUT_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_PALETS1"/></ControlData><ControlData Name="mnuITTOUT_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_PALETBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCOPY"/></ControlData><ControlData Name="mnuITTOUT_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCUT"/></ControlData><ControlData Name="mnuITTOUT_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETPASTE"/></ControlData><ControlData Name="mnuITTOUT_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCHANGE"/></ControlData><ControlData Name="mnuITTOUT_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETPrn"/></ControlData><ControlData Name="mnuITTOUT_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCfg"/></ControlData><ControlData Name="mnuITTOUT_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_PALETFind"/></ControlData><ControlData Name="mnuITTOUT_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_LINES as object
private menuActionITTOUT_LINES as string
private fndITTOUT_PALET as object
private menuActionITTOUT_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTOUT_LINES_PositionChanged()
  pnlITTOUT_LINES.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_LINES_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_LINESCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_LINES_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_LINES
End If
end sub
private sub mnuITTOUT_LINESAdd_click()
   menuActionITTOUT_LINES =&quot;ADD&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESEdit_click()
   menuActionITTOUT_LINES =&quot;EDIT&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESDelete_click()
   menuActionITTOUT_LINES =&quot;DEL&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESOpen_click()
   menuActionITTOUT_LINES =&quot;RUN&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESRef_click()
   menuActionITTOUT_LINES =&quot;REF&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
  Private Sub mnuITTOUT_LINESCOPY_Click()
    On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_LINES.Row &gt; 0 Then
     If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_LINESCUT_Click()
    On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_LINES.Row &gt; 0 Then
     If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_LINES.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_LINESCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  If gridITTOUT_LINES.Row &gt; 0 Then
   If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_LINES.ItemCount = u.parent.Count
      gridITTOUT_LINES.RefreshRowIndex gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_LINESCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_LINESPrn_click()
   menuActionITTOUT_LINES =&quot;PRN&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESCfg_click()
   menuActionITTOUT_LINES =&quot;CFG&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESFind_click()
   menuActionITTOUT_LINES =&quot;FND&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESAcc_click()
   menuActionITTOUT_LINES =&quot;ACC&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub menuTimerITTOUT_LINES_timer()
   menuTimerITTOUT_LINES.enabled = false
   if menuActionITTOUT_LINES =&quot;ADD&quot; then cmdITTOUT_LINESADD_CLick
   if menuActionITTOUT_LINES =&quot;EDIT&quot; then cmdITTOUT_LINESEDIT_CLick
   if menuActionITTOUT_LINES =&quot;DEL&quot; then cmdITTOUT_LINESDEL_CLick
   if menuActionITTOUT_LINES =&quot;RUN&quot; then cmdITTOUT_LINESRUN_CLick
   if menuActionITTOUT_LINES =&quot;REF&quot; then cmdITTOUT_LINESREF_CLick
   if menuActionITTOUT_LINES =&quot;PRN&quot; then cmdITTOUT_LINESPRN_CLick
   if menuActionITTOUT_LINES =&quot;CFG&quot; then cmdITTOUT_LINESCFG_CLick
   if menuActionITTOUT_LINES =&quot;FND&quot; then cmdITTOUT_LINESFND_CLick
   if menuActionITTOUT_LINES =&quot;ACC&quot; then cmdITTOUT_LINESACC_CLick
   menuActionITTOUT_LINES =&quot;&quot;
end sub
Private Sub cmdITTOUT_LINESCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_LINES,&quot;gridITTOUT_LINES&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_LINESPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_LINES,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_LINESRef_Click()
  on error resume next
  item.ITTOUT_LINES.Refresh
  gridITTOUT_LINES.itemCount = item.ITTOUT_LINES.count
  gridITTOUT_LINES.Refetch
  gridITTOUT_LINES.Refresh
End Sub
Private Sub cmdITTOUT_LINESAcc_Click()
On Error Resume Next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 Then
 If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_LINESEdit_Click()
  on error resume next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 then
 If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_LINES_admi.Item = u
    again: frmITTOUT_LINES_admi.NotFirstTime = False
    frmITTOUT_LINES_admi.OnInit
    frmITTOUT_LINES_admi.Show vbModal
    If frmITTOUT_LINES_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_LINES.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_LINESDel_Click()
  on error resume next
  gridITTOUT_LINES.Delete
End Sub
Private Sub cmdITTOUT_LINESAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTOUT_LINES.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;OUT%P&quot;, &quot;&quot;) 

      Set frmITTOUT_LINES_admi.Item = u
      again: frmITTOUT_LINES_admi.NotFirstTime = False
      frmITTOUT_LINES_admi.OnInit
      frmITTOUT_LINES_admi.Show vbModal
      If frmITTOUT_LINES_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_LINES.ItemCount = Item.ITTOUT_LINES.Count
        gridITTOUT_LINES.Refresh
        gridITTOUT_LINES.RefreshGroups
        gridITTOUT_LINES.Refreshsort
        gridITTOUT_LINES.MoveToBookmark u.ID &amp; &quot;ITTOUT_LINES&quot;
      Else
        Item.ITTOUT_LINES.Delete u.ID
        Item.ITTOUT_LINES.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_LINESFnd_Click()
  on error resume next
  fndITTOUT_LINES.ShowForm
End Sub
Private Sub cmdITTOUT_LINESRun_Click()
  on error resume next
  gridITTOUT_LINES_DblClick
End Sub
Private Sub gridITTOUT_LINES_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_LINES.LoadRow gridITTOUT_LINES, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_LINES_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_LINES_DblClick()
  cmdITTOUT_LINESEdit_Click
End Sub
Private Sub gridITTOUT_LINES_KeyPress(KeyAscii As Integer)
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_LINES.FindOnPress KeyAscii
End Sub

Private Sub pnlITTOUT_LINES_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTOUT_LINES.Left = Left
  gridITTOUT_LINES.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTOUT_LINES.Width = Width
  gridITTOUT_LINES.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTOUT_LINESAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTOUT_LINESEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTOUT_LINESDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTOUT_LINESRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTOUT_LINESPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTOUT_LINESCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTOUT_LINESFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTOUT_LINESRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTOUT_LINESAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTOUT_LINESPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_LINES.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_LINES.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdITTOUT_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_PALET,&quot;gridITTOUT_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_PALETAcc_Click()
On Error Resume Next
If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
If gridITTOUT_PALET.Row &gt; 0 Then
 If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_PALETFnd_Click()
  on error resume next
  fndITTOUT_PALET.ShowForm
End Sub
Private Sub cmdITTOUT_PALETRun_Click()
  on error resume next
  gridITTOUT_PALET_DblClick
End Sub
Private Sub pnlITTOUT_LINES_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTOUT_PALET.Left = Left
  gridITTOUT_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTOUT_PALET.Width = Width
  gridITTOUT_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTOUT_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTOUT_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTOUT_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTOUT_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTOUT_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTOUT_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTOUT_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTOUT_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTOUT_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTOUT_PALETRef_Click()
  on error resume next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 Then
 If gridITTOUT_LINES.RowIndex ( gridITTOUT_LINES.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTOUT_PALET.refresh
   gridITTOUT_PALET.itemcount=gu.ITTOUT_PALET.count
   gridITTOUT_PALET.refetch
   gridITTOUT_PALET.refresh
 else
  gridITTOUT_PALET.columns.clear
  gridITTOUT_PALET.itemcount=0
 End If
else
 gridITTOUT_PALET.columns.clear
 gridITTOUT_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTOUT_PALETEdit_Click()
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmITTOUT_PALET_admi.Item = u
    again: frmITTOUT_PALET_admi.NotFirstTime = False
    frmITTOUT_PALET_admi.OnInit
    frmITTOUT_PALET_admi.Show vbModal
    If frmITTOUT_PALET_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_PALET.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTOUT_PALETDel_Click()
  on error resume next
  gridITTOUT_PALET.Delete
End Sub
Private Sub cmdITTOUT_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ITTOUT_PALET.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;OUTPAL%P&quot;, &quot;&quot;) 

      Set frmITTOUT_PALET_admi.Item = u
      again: frmITTOUT_PALET_admi.NotFirstTime = False
      frmITTOUT_PALET_admi.OnInit
      frmITTOUT_PALET_admi.Show vbModal
      If frmITTOUT_PALET_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_PALET.ItemCount = gu.ITTOUT_PALET.Count
        gridITTOUT_PALET.Refresh
        gridITTOUT_PALET.RefreshGroups
        gridITTOUT_PALET.Refreshsort
        gridITTOUT_PALET.MoveToBookmark u.ID &amp; &quot;ITTOUT_PALET&quot;
      Else
        gu.ITTOUT_PALET.Delete u.ID
        gu.ITTOUT_PALET.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTOUT_LINES_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTOUT_LINES.ItemCount = 0 Then 
  gridITTOUT_PALET.ItemCount=0
  Exit Sub
End If
If gridITTOUT_LINES.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTOUT_LINES.Row And LastRow &gt; 0 Then
    gridITTOUT_LINES.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTOUT_LINES.GetRowData(gridITTOUT_LINES.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTOUT_LINES.RowIndex ( gridITTOUT_LINES.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTOUT_LINES.Row or gridITTOUT_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTOUT_PALET.Preparegrid gridITTOUT_PALET
  gridITTOUT_PALET.ItemCount=0
    LoadGridLayout gridITTOUT_PALET
    Set fndITTOUT_PALET = Nothing
    Set fndITTOUT_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTOUT_PALET.Init gridITTOUT_PALET
  gridITTOUT_PALET.ItemCount=gu.ITTOUT_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTOUT_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTOUT_PALET.LoadRow gridITTOUT_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTOUT_PALET_KeyPress(KeyAscii As Integer)
  If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridITTOUT_PALET_DblClick()
    cmdITTOUT_PALETEdit_click
End Sub
Private Sub gridITTOUT_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
 If gridITTOUT_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTOUT_PALET.Row And LastRow &gt; 0 Then
     gridITTOUT_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTOUT_PALET.GetRowData(gridITTOUT_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTOUT_PALETPASTE_Click()
On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ITTOUT_PALET.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_PALET.ItemCount = u.parent.Count
    ELSE
      GU.ITTOUT_PALET.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_PALET
End If
end sub
private sub mnuITTOUT_PALETAdd_click()
   menuActionITTOUT_PALET =&quot;ADD&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETEdit_click()
   menuActionITTOUT_PALET =&quot;EDIT&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETDelete_click()
   menuActionITTOUT_PALET =&quot;DEL&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETOpen_click()
   menuActionITTOUT_PALET =&quot;RUN&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETRef_click()
   menuActionITTOUT_PALET =&quot;REF&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
  Private Sub mnuITTOUT_PALETCOPY_Click()
    On Error Resume Next
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.Row &gt; 0 Then
     If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_PALETCUT_Click()
    On Error Resume Next
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.Row &gt; 0 Then
     If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
  If gridITTOUT_PALET.Row &gt; 0 Then
   If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_PALET.ItemCount = u.parent.Count
      gridITTOUT_PALET.RefreshRowIndex gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_PALETPrn_click()
   menuActionITTOUT_PALET =&quot;PRN&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETCfg_click()
   menuActionITTOUT_PALET =&quot;CFG&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETFind_click()
   menuActionITTOUT_PALET =&quot;FND&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETAcc_click()
   menuActionITTOUT_PALET =&quot;ACC&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub menuTimerITTOUT_PALET_timer()
   menuTimerITTOUT_PALET.enabled = false
   if menuActionITTOUT_PALET =&quot;ADD&quot; then cmdITTOUT_PALETADD_CLick
   if menuActionITTOUT_PALET =&quot;EDIT&quot; then cmdITTOUT_PALETEDIT_CLick
   if menuActionITTOUT_PALET =&quot;DEL&quot; then cmdITTOUT_PALETDEL_CLick
   if menuActionITTOUT_PALET =&quot;RUN&quot; then cmdITTOUT_PALETRUN_CLick
   if menuActionITTOUT_PALET =&quot;REF&quot; then cmdITTOUT_PALETREF_CLick
   if menuActionITTOUT_PALET =&quot;PRN&quot; then cmdITTOUT_PALETPRN_CLick
   if menuActionITTOUT_PALET =&quot;CFG&quot; then cmdITTOUT_PALETCFG_CLick
   if menuActionITTOUT_PALET =&quot;FND&quot; then cmdITTOUT_PALETFND_CLick
   if menuActionITTOUT_PALET =&quot;ACC&quot; then cmdITTOUT_PALETACC_CLick
   menuActionITTOUT_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_LINESAdd,cmdITTOUT_LINESAdd.tag
  LoadBtnPictures cmdITTOUT_LINESEdit,cmdITTOUT_LINESEdit.tag
  LoadBtnPictures cmdITTOUT_LINESDel,cmdITTOUT_LINESDel.tag
  LoadBtnPictures cmdITTOUT_LINESRef,cmdITTOUT_LINESRef.tag
  LoadBtnPictures cmdITTOUT_LINESPrn,cmdITTOUT_LINESPrn.tag
  LoadBtnPictures cmdITTOUT_LINESFnd,cmdITTOUT_LINESFnd.tag
  LoadBtnPictures cmdITTOUT_LINESRun,cmdITTOUT_LINESRun.tag
  LoadBtnPictures cmdITTOUT_LINESAcc,cmdITTOUT_LINESAcc.tag
  LoadBtnPictures cmdITTOUT_LINESCfg,cmdITTOUT_LINESCfg.tag
  item.ITTOUT_LINES.PrepareGrid gridITTOUT_LINES
  LoadGridLayout gridITTOUT_LINES
  Set fndITTOUT_LINES = Nothing
  On Error Resume Next
  Set fndITTOUT_LINES = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_LINES.Init gridITTOUT_LINES
  LoadBtnPictures cmdITTOUT_PALETAdd,cmdITTOUT_PALETAdd.tag
  LoadBtnPictures cmdITTOUT_PALETEdit,cmdITTOUT_PALETEdit.tag
  LoadBtnPictures cmdITTOUT_PALETDel,cmdITTOUT_PALETDel.tag
  LoadBtnPictures cmdITTOUT_PALETRef,cmdITTOUT_PALETRef.tag
  LoadBtnPictures cmdITTOUT_PALETPrn,cmdITTOUT_PALETPrn.tag
  LoadBtnPictures cmdITTOUT_PALETFnd,cmdITTOUT_PALETFnd.Tag
  LoadBtnPictures cmdITTOUT_PALETCfg,cmdITTOUT_PALETCfg.tag
  LoadBtnPictures cmdITTOUT_PALETRun,cmdITTOUT_PALETRun.Tag
  LoadBtnPictures cmdITTOUT_PALETAcc,cmdITTOUT_PALETAcc.Tag
  gridITTOUT_PALET.Columns.Clear
  gridITTOUT_PALET.ItemCount=0
  cmdITTOUT_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTOUT_LINES.RestorePosition
  gridITTOUT_LINES_RowColChange gridITTOUT_LINES.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_LINES.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_LINES = nothing
  set fndITTOUT_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_EPL_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTOUT_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTOUT_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_EPLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_EPLOpen"/></ControlData><ControlData Name="mnuITTOUT_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLRef"/></ControlData><ControlData Name="mnuITTOUT_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_EPLS1"/></ControlData><ControlData Name="mnuITTOUT_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_EPLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCOPY"/></ControlData><ControlData Name="mnuITTOUT_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCUT"/></ControlData><ControlData Name="mnuITTOUT_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLPASTE"/></ControlData><ControlData Name="mnuITTOUT_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCHANGE"/></ControlData><ControlData Name="mnuITTOUT_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLPrn"/></ControlData><ControlData Name="mnuITTOUT_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCfg"/></ControlData><ControlData Name="mnuITTOUT_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_EPLFind"/></ControlData><ControlData Name="mnuITTOUT_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_EPL as object
private menuActionITTOUT_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_EPL,&quot;gridITTOUT_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_EPLRef_Click()
  on error resume next
  item.ITTOUT_EPL.Refresh
  gridITTOUT_EPL.itemCount = item.ITTOUT_EPL.count
  gridITTOUT_EPL.Refetch
  gridITTOUT_EPL.Refresh
End Sub
Private Sub cmdITTOUT_EPLAcc_Click()
On Error Resume Next
If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
If gridITTOUT_EPL.Row &gt; 0 Then
 If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_EPLEdit_Click()
  on error resume next
If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
If gridITTOUT_EPL.Row &gt; 0 then
 If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_EPL_admi.Item = u
    again: frmITTOUT_EPL_admi.NotFirstTime = False
    frmITTOUT_EPL_admi.OnInit
    frmITTOUT_EPL_admi.Show vbModal
    If frmITTOUT_EPL_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_EPL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_EPLDel_Click()
  on error resume next
  gridITTOUT_EPL.Delete
End Sub
Private Sub cmdITTOUT_EPLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTOUT_EPL.Add()

      Set frmITTOUT_EPL_admi.Item = u
      again: frmITTOUT_EPL_admi.NotFirstTime = False
      frmITTOUT_EPL_admi.OnInit
      frmITTOUT_EPL_admi.Show vbModal
      If frmITTOUT_EPL_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_EPL.ItemCount = Item.ITTOUT_EPL.Count
        gridITTOUT_EPL.Refresh
        gridITTOUT_EPL.RefreshGroups
        gridITTOUT_EPL.Refreshsort
        gridITTOUT_EPL.MoveToBookmark u.ID &amp; &quot;ITTOUT_EPL&quot;
      Else
        Item.ITTOUT_EPL.Delete u.ID
        Item.ITTOUT_EPL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_EPLFnd_Click()
  on error resume next
  fndITTOUT_EPL.ShowForm
End Sub
Private Sub cmdITTOUT_EPLRun_Click()
  on error resume next
  gridITTOUT_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_EPL.LoadRow gridITTOUT_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTOUT_EPL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTOUT_EPL_DblClick()
  cmdITTOUT_EPLEdit_Click
End Sub
Private Sub gridITTOUT_EPL_KeyPress(KeyAscii As Integer)
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTOUT_EPL.Row And LastRow &gt; 0 Then
  gridITTOUT_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTOUT_EPL.GetRowData(gridITTOUT_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTOUT_EPLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_EPL.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_EPL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_EPL
End If
end sub
private sub mnuITTOUT_EPLAdd_click()
   menuActionITTOUT_EPL =&quot;ADD&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLEdit_click()
   menuActionITTOUT_EPL =&quot;EDIT&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLDelete_click()
   menuActionITTOUT_EPL =&quot;DEL&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLOpen_click()
   menuActionITTOUT_EPL =&quot;RUN&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLRef_click()
   menuActionITTOUT_EPL =&quot;REF&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
  Private Sub mnuITTOUT_EPLCOPY_Click()
    On Error Resume Next
    If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
    If gridITTOUT_EPL.Row &gt; 0 Then
     If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_EPLCUT_Click()
    On Error Resume Next
    If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
    If gridITTOUT_EPL.Row &gt; 0 Then
     If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  If gridITTOUT_EPL.Row &gt; 0 Then
   If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_EPL.ItemCount = u.parent.Count
      gridITTOUT_EPL.RefreshRowIndex gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_EPLPrn_click()
   menuActionITTOUT_EPL =&quot;PRN&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLCfg_click()
   menuActionITTOUT_EPL =&quot;CFG&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLFind_click()
   menuActionITTOUT_EPL =&quot;FND&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLAcc_click()
   menuActionITTOUT_EPL =&quot;ACC&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub menuTimerITTOUT_EPL_timer()
   menuTimerITTOUT_EPL.enabled = false
   if menuActionITTOUT_EPL =&quot;ADD&quot; then cmdITTOUT_EPLADD_CLick
   if menuActionITTOUT_EPL =&quot;EDIT&quot; then cmdITTOUT_EPLEDIT_CLick
   if menuActionITTOUT_EPL =&quot;DEL&quot; then cmdITTOUT_EPLDEL_CLick
   if menuActionITTOUT_EPL =&quot;RUN&quot; then cmdITTOUT_EPLRUN_CLick
   if menuActionITTOUT_EPL =&quot;REF&quot; then cmdITTOUT_EPLREF_CLick
   if menuActionITTOUT_EPL =&quot;PRN&quot; then cmdITTOUT_EPLPRN_CLick
   if menuActionITTOUT_EPL =&quot;CFG&quot; then cmdITTOUT_EPLCFG_CLick
   if menuActionITTOUT_EPL =&quot;FND&quot; then cmdITTOUT_EPLFND_CLick
   if menuActionITTOUT_EPL =&quot;ACC&quot; then cmdITTOUT_EPLACC_CLick
   menuActionITTOUT_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_EPLAdd,cmdITTOUT_EPLAdd.tag
  LoadBtnPictures cmdITTOUT_EPLEdit,cmdITTOUT_EPLEdit.tag
  LoadBtnPictures cmdITTOUT_EPLDel,cmdITTOUT_EPLDel.tag
  LoadBtnPictures cmdITTOUT_EPLRef,cmdITTOUT_EPLRef.tag
  LoadBtnPictures cmdITTOUT_EPLPrn,cmdITTOUT_EPLPrn.tag
  LoadBtnPictures cmdITTOUT_EPLFnd,cmdITTOUT_EPLFnd.tag
  LoadBtnPictures cmdITTOUT_EPLRun,cmdITTOUT_EPLRun.tag
  LoadBtnPictures cmdITTOUT_EPLAcc,cmdITTOUT_EPLAcc.tag
  LoadBtnPictures cmdITTOUT_EPLCfg,cmdITTOUT_EPLCfg.tag
  item.ITTOUT_EPL.PrepareGrid gridITTOUT_EPL
  LoadGridLayout gridITTOUT_EPL
  Set fndITTOUT_EPL = Nothing
  On Error Resume Next
  Set fndITTOUT_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_EPL.Init gridITTOUT_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTOUT_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTOUT_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_SRV_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTOUT_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTOUT_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_SRVOpen"/></ControlData><ControlData Name="mnuITTOUT_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVRef"/></ControlData><ControlData Name="mnuITTOUT_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_SRVS1"/></ControlData><ControlData Name="mnuITTOUT_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCOPY"/></ControlData><ControlData Name="mnuITTOUT_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCUT"/></ControlData><ControlData Name="mnuITTOUT_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVPASTE"/></ControlData><ControlData Name="mnuITTOUT_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCHANGE"/></ControlData><ControlData Name="mnuITTOUT_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVPrn"/></ControlData><ControlData Name="mnuITTOUT_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCfg"/></ControlData><ControlData Name="mnuITTOUT_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_SRVFind"/></ControlData><ControlData Name="mnuITTOUT_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_SRV as object
private menuActionITTOUT_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_SRV,&quot;gridITTOUT_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_SRVRef_Click()
  on error resume next
  item.ITTOUT_SRV.Refresh
  gridITTOUT_SRV.itemCount = item.ITTOUT_SRV.count
  gridITTOUT_SRV.Refetch
  gridITTOUT_SRV.Refresh
End Sub
Private Sub cmdITTOUT_SRVAcc_Click()
On Error Resume Next
If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
If gridITTOUT_SRV.Row &gt; 0 Then
 If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_SRVEdit_Click()
  on error resume next
If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
If gridITTOUT_SRV.Row &gt; 0 then
 If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_SRV_admi.Item = u
    again: frmITTOUT_SRV_admi.NotFirstTime = False
    frmITTOUT_SRV_admi.OnInit
    frmITTOUT_SRV_admi.Show vbModal
    If frmITTOUT_SRV_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_SRVDel_Click()
  on error resume next
  gridITTOUT_SRV.Delete
End Sub
Private Sub cmdITTOUT_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTOUT_SRV.Add()

      Set frmITTOUT_SRV_admi.Item = u
      again: frmITTOUT_SRV_admi.NotFirstTime = False
      frmITTOUT_SRV_admi.OnInit
      frmITTOUT_SRV_admi.Show vbModal
      If frmITTOUT_SRV_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_SRV.ItemCount = Item.ITTOUT_SRV.Count
        gridITTOUT_SRV.Refresh
        gridITTOUT_SRV.RefreshGroups
        gridITTOUT_SRV.Refreshsort
        gridITTOUT_SRV.MoveToBookmark u.ID &amp; &quot;ITTOUT_SRV&quot;
      Else
        Item.ITTOUT_SRV.Delete u.ID
        Item.ITTOUT_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_SRVFnd_Click()
  on error resume next
  fndITTOUT_SRV.ShowForm
End Sub
Private Sub cmdITTOUT_SRVRun_Click()
  on error resume next
  gridITTOUT_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_SRV.LoadRow gridITTOUT_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTOUT_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTOUT_SRV_DblClick()
  cmdITTOUT_SRVEdit_Click
End Sub
Private Sub gridITTOUT_SRV_KeyPress(KeyAscii As Integer)
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTOUT_SRV.Row And LastRow &gt; 0 Then
  gridITTOUT_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTOUT_SRV.GetRowData(gridITTOUT_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTOUT_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_SRV
End If
end sub
private sub mnuITTOUT_SRVAdd_click()
   menuActionITTOUT_SRV =&quot;ADD&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVEdit_click()
   menuActionITTOUT_SRV =&quot;EDIT&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVDelete_click()
   menuActionITTOUT_SRV =&quot;DEL&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVOpen_click()
   menuActionITTOUT_SRV =&quot;RUN&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVRef_click()
   menuActionITTOUT_SRV =&quot;REF&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
  Private Sub mnuITTOUT_SRVCOPY_Click()
    On Error Resume Next
    If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
    If gridITTOUT_SRV.Row &gt; 0 Then
     If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_SRVCUT_Click()
    On Error Resume Next
    If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
    If gridITTOUT_SRV.Row &gt; 0 Then
     If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  If gridITTOUT_SRV.Row &gt; 0 Then
   If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_SRV.ItemCount = u.parent.Count
      gridITTOUT_SRV.RefreshRowIndex gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_SRVPrn_click()
   menuActionITTOUT_SRV =&quot;PRN&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVCfg_click()
   menuActionITTOUT_SRV =&quot;CFG&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVFind_click()
   menuActionITTOUT_SRV =&quot;FND&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVAcc_click()
   menuActionITTOUT_SRV =&quot;ACC&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub menuTimerITTOUT_SRV_timer()
   menuTimerITTOUT_SRV.enabled = false
   if menuActionITTOUT_SRV =&quot;ADD&quot; then cmdITTOUT_SRVADD_CLick
   if menuActionITTOUT_SRV =&quot;EDIT&quot; then cmdITTOUT_SRVEDIT_CLick
   if menuActionITTOUT_SRV =&quot;DEL&quot; then cmdITTOUT_SRVDEL_CLick
   if menuActionITTOUT_SRV =&quot;RUN&quot; then cmdITTOUT_SRVRUN_CLick
   if menuActionITTOUT_SRV =&quot;REF&quot; then cmdITTOUT_SRVREF_CLick
   if menuActionITTOUT_SRV =&quot;PRN&quot; then cmdITTOUT_SRVPRN_CLick
   if menuActionITTOUT_SRV =&quot;CFG&quot; then cmdITTOUT_SRVCFG_CLick
   if menuActionITTOUT_SRV =&quot;FND&quot; then cmdITTOUT_SRVFND_CLick
   if menuActionITTOUT_SRV =&quot;ACC&quot; then cmdITTOUT_SRVACC_CLick
   menuActionITTOUT_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_SRVAdd,cmdITTOUT_SRVAdd.tag
  LoadBtnPictures cmdITTOUT_SRVEdit,cmdITTOUT_SRVEdit.tag
  LoadBtnPictures cmdITTOUT_SRVDel,cmdITTOUT_SRVDel.tag
  LoadBtnPictures cmdITTOUT_SRVRef,cmdITTOUT_SRVRef.tag
  LoadBtnPictures cmdITTOUT_SRVPrn,cmdITTOUT_SRVPrn.tag
  LoadBtnPictures cmdITTOUT_SRVFnd,cmdITTOUT_SRVFnd.tag
  LoadBtnPictures cmdITTOUT_SRVRun,cmdITTOUT_SRVRun.tag
  LoadBtnPictures cmdITTOUT_SRVAcc,cmdITTOUT_SRVAcc.tag
  LoadBtnPictures cmdITTOUT_SRVCfg,cmdITTOUT_SRVCfg.tag
  item.ITTOUT_SRV.PrepareGrid gridITTOUT_SRV
  LoadGridLayout gridITTOUT_SRV
  Set fndITTOUT_SRV = Nothing
  On Error Resume Next
  Set fndITTOUT_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_SRV.Init gridITTOUT_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTOUT_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTOUT_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctladmi_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_DEF" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_DEF_admi"><Properties Name="Name" PropValue="pnlITTOUT_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_LINES" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_LINES_admi"><Properties Name="Name" PropValue="pnlITTOUT_LINES"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_EPL" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_EPL_admi"><Properties Name="Name" PropValue="pnlITTOUT_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_SRV" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_SRV_admi"><Properties Name="Name" PropValue="pnlITTOUT_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отгрузка"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим admi
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTOUT_DEF.IsOK
if IsItOk then IsItOk = pnlITTOUT_LINES.IsOK
if IsItOk then IsItOk = pnlITTOUT_EPL.IsOK
if IsItOk then IsItOk = pnlITTOUT_SRV.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTOUT_SRV.Visible = False
  pnlITTOUT_EPL.Visible = False
  pnlITTOUT_LINES.Visible = False
  pnlITTOUT_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTOUT_DEF&quot;
     With pnlITTOUT_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_DEF.OnClick item,parentform
     End With
   Case &quot;ITTOUT_LINES&quot;
     With pnlITTOUT_LINES
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_LINES.OnClick item,parentform
     End With
   Case &quot;ITTOUT_EPL&quot;
     With pnlITTOUT_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_EPL.OnClick item,parentform
     End With
   Case &quot;ITTOUT_SRV&quot;
     With pnlITTOUT_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_SRV.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTOUT_DEF&quot;
pnlITTOUT_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_LINES&quot;, &quot;Строки заказа&quot;)
pnlITTOUT_LINES.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTOUT_EPL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTOUT_SRV.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTOUT&quot;, &quot;ctladmi_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTOUT_DEF.CloseClass
 pnlITTOUT_LINES.CloseClass
 pnlITTOUT_EPL.CloseClass
 pnlITTOUT_SRV.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTOUT_DEF.OnSave
 pnlITTOUT_LINES.OnSave
 pnlITTOUT_EPL.OnSave
 pnlITTOUT_SRV.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTOUT_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_LINES.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_EPL.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_SRV.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{CDCAFF7F-B013-40AF-BE61-1A27E35DB946}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет отгрузка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot;
    i = i + 1
    m(i).Caption = &quot;Обработка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot;
    i = i + 1
    m(i).Caption = &quot;Отгрузка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{CDCAFF7F-B013-40AF-BE61-1A27E35DB946}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmadmi_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTOUTGUI.ctladmi_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отгрузка"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим admi
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_DEF_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_DEFmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_DEF режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot;
  Open s &amp; Me.name &amp; &quot;{CFE2CC98-4940-45B0-9CFB-4652451F257D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_LINES_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_LINESmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_LINES режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot;
  Open s &amp; Me.name &amp; &quot;{B5BCFED8-5D8A-43F8-BFD0-AE156F365BB0}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_PALET_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_PALETmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_PALET режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot;
  Open s &amp; Me.name &amp; &quot;{32BF9EC4-4163-4787-BC95-0F7A76E83665}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_EPL_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_EPLmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_EPL режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot;
  Open s &amp; Me.name &amp; &quot;{4EA08F20-313E-4D57-A3CC-9ED7521DABEF}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTOUT_SRV_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_SRVmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTOUT_SRV режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot;
  Open s &amp; Me.name &amp; &quot;{AFED76C0-1847-4162-8CDD-227AE5BDE97B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_DEF_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTOUT_DEF" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_DEFmain"><Properties Name="Name" PropValue="editITTOUT_DEF"/></ControlData><ControlData Name="cmdITTOUT_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_DEFRef_Click()
  on error resume next
  Item.ITTOUT_DEF.Refresh
  cmdITTOUT_DEFAdd_Click
End Sub
Private Sub cmdITTOUT_DEFCfg_Click()
    on error resume next 
    editITTOUT_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTOUT_editITTOUT_DEF_main&quot; For Output As #ff
    print #ff, editITTOUT_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTOUT_DEFAdd_Click()
  on error resume next
 Set editITTOUT_DEF.Item = Item.ITTOUT_DEF.Item(1)
 editITTOUT_DEF.InitPanel
 cmdITTOUT_DEFSave.Enabled = True
End Sub
Private Sub cmdITTOUT_DEFDel_Click()
  on error resume next
End Sub
Private Sub editITTOUT_DEF_Changed()
 cmdITTOUT_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTOUT_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTOUT_DEFSave_Click()
  on error resume next
    if editITTOUT_DEF.IsOK then
    MousePointer = vbHourglass
    editITTOUT_DEF.Save
  on error goto bye
    editITTOUT_DEF.item.Save
    MousePointer = vbNormal
    cmdITTOUT_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editITTOUT_DEF.item.REFRESH
  editITTOUT_DEF.InitPanel
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_DEFSave,cmdITTOUT_DEFSave.tag
  LoadBtnPictures cmdITTOUT_DEFRef,cmdITTOUT_DEFRef.tag
  LoadBtnPictures cmdITTOUT_DEFCfg,cmdITTOUT_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTOUT_editITTOUT_DEF_main&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTOUT_DEF.PanelCustomisationString = buf
  cmdITTOUT_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTOUT_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTOUT_DEF.Save
if editITTOUT_DEF.item.Changed then
  editITTOUT_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTOUT_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_LINES_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_LINES" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTOUT_LINES"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTOUT_LINES" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_LINES"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_LINESAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_LINESEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_LINESRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_LINESPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_LINESCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_LINESFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_LINESRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_LINESAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTOUT_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_LINES" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTOUT_LINES"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_LINESAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_LINESEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_LINESEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_LINESOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_LINESOpen"/></ControlData><ControlData Name="mnuITTOUT_LINESRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESRef"/></ControlData><ControlData Name="mnuITTOUT_LINESS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_LINESS1"/></ControlData><ControlData Name="mnuITTOUT_LINESBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_LINESBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_LINESCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCOPY"/></ControlData><ControlData Name="mnuITTOUT_LINESCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCUT"/></ControlData><ControlData Name="mnuITTOUT_LINESPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESPASTE"/></ControlData><ControlData Name="mnuITTOUT_LINESCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCHANGE"/></ControlData><ControlData Name="mnuITTOUT_LINESCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_LINESPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESPrn"/></ControlData><ControlData Name="mnuITTOUT_LINESCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCfg"/></ControlData><ControlData Name="mnuITTOUT_LINESFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_LINESFind"/></ControlData><ControlData Name="mnuITTOUT_LINESAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_LINESAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_LINES" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_LINES"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTOUT_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTOUT_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_PALETEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_PALETOpen"/></ControlData><ControlData Name="mnuITTOUT_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETRef"/></ControlData><ControlData Name="mnuITTOUT_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_PALETS1"/></ControlData><ControlData Name="mnuITTOUT_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_PALETBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCOPY"/></ControlData><ControlData Name="mnuITTOUT_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCUT"/></ControlData><ControlData Name="mnuITTOUT_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETPASTE"/></ControlData><ControlData Name="mnuITTOUT_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCHANGE"/></ControlData><ControlData Name="mnuITTOUT_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETPrn"/></ControlData><ControlData Name="mnuITTOUT_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCfg"/></ControlData><ControlData Name="mnuITTOUT_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_PALETFind"/></ControlData><ControlData Name="mnuITTOUT_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_LINES as object
private menuActionITTOUT_LINES as string
private fndITTOUT_PALET as object
private menuActionITTOUT_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTOUT_LINES_PositionChanged()
  pnlITTOUT_LINES.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_LINES_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_LINESCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_LINES_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_LINES
End If
end sub
private sub mnuITTOUT_LINESAdd_click()
   menuActionITTOUT_LINES =&quot;ADD&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESEdit_click()
   menuActionITTOUT_LINES =&quot;EDIT&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESDelete_click()
   menuActionITTOUT_LINES =&quot;DEL&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESOpen_click()
   menuActionITTOUT_LINES =&quot;RUN&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESRef_click()
   menuActionITTOUT_LINES =&quot;REF&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
  Private Sub mnuITTOUT_LINESCOPY_Click()
    On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_LINES.Row &gt; 0 Then
     If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_LINESCUT_Click()
    On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_LINES.Row &gt; 0 Then
     If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_LINES.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_LINESCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  If gridITTOUT_LINES.Row &gt; 0 Then
   If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_LINES.ItemCount = u.parent.Count
      gridITTOUT_LINES.RefreshRowIndex gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_LINESCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_LINESPrn_click()
   menuActionITTOUT_LINES =&quot;PRN&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESCfg_click()
   menuActionITTOUT_LINES =&quot;CFG&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESFind_click()
   menuActionITTOUT_LINES =&quot;FND&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESAcc_click()
   menuActionITTOUT_LINES =&quot;ACC&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub menuTimerITTOUT_LINES_timer()
   menuTimerITTOUT_LINES.enabled = false
   if menuActionITTOUT_LINES =&quot;ADD&quot; then cmdITTOUT_LINESADD_CLick
   if menuActionITTOUT_LINES =&quot;EDIT&quot; then cmdITTOUT_LINESEDIT_CLick
   if menuActionITTOUT_LINES =&quot;DEL&quot; then cmdITTOUT_LINESDEL_CLick
   if menuActionITTOUT_LINES =&quot;RUN&quot; then cmdITTOUT_LINESRUN_CLick
   if menuActionITTOUT_LINES =&quot;REF&quot; then cmdITTOUT_LINESREF_CLick
   if menuActionITTOUT_LINES =&quot;PRN&quot; then cmdITTOUT_LINESPRN_CLick
   if menuActionITTOUT_LINES =&quot;CFG&quot; then cmdITTOUT_LINESCFG_CLick
   if menuActionITTOUT_LINES =&quot;FND&quot; then cmdITTOUT_LINESFND_CLick
   if menuActionITTOUT_LINES =&quot;ACC&quot; then cmdITTOUT_LINESACC_CLick
   menuActionITTOUT_LINES =&quot;&quot;
end sub
Private Sub cmdITTOUT_LINESCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_LINES,&quot;gridITTOUT_LINES&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_LINESPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_LINES,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_LINESRef_Click()
  on error resume next
  item.ITTOUT_LINES.Refresh
  gridITTOUT_LINES.itemCount = item.ITTOUT_LINES.count
  gridITTOUT_LINES.Refetch
  gridITTOUT_LINES.Refresh
End Sub
Private Sub cmdITTOUT_LINESAcc_Click()
On Error Resume Next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 Then
 If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_LINESEdit_Click()
  on error resume next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 then
 If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_LINES_main.Item = u
    again: frmITTOUT_LINES_main.NotFirstTime = False
    frmITTOUT_LINES_main.OnInit
    frmITTOUT_LINES_main.Show vbModal
    If frmITTOUT_LINES_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_LINES.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_LINESDel_Click()
  on error resume next
End Sub
Private Sub cmdITTOUT_LINESAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_LINESFnd_Click()
  on error resume next
  fndITTOUT_LINES.ShowForm
End Sub
Private Sub cmdITTOUT_LINESRun_Click()
  on error resume next
  gridITTOUT_LINES_DblClick
End Sub
Private Sub gridITTOUT_LINES_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_LINES.LoadRow gridITTOUT_LINES, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_LINES_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_LINES_DblClick()
  cmdITTOUT_LINESEdit_Click
End Sub
Private Sub gridITTOUT_LINES_KeyPress(KeyAscii As Integer)
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_LINES.FindOnPress KeyAscii
End Sub

Private Sub pnlITTOUT_LINES_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTOUT_LINES.Left = Left
  gridITTOUT_LINES.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTOUT_LINES.Width = Width
  gridITTOUT_LINES.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTOUT_LINESAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTOUT_LINESEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTOUT_LINESDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTOUT_LINESRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTOUT_LINESPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTOUT_LINESCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTOUT_LINESFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTOUT_LINESRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTOUT_LINESAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTOUT_LINESPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_LINES.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_LINES.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdITTOUT_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_PALET,&quot;gridITTOUT_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_PALETAcc_Click()
On Error Resume Next
If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
If gridITTOUT_PALET.Row &gt; 0 Then
 If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_PALETFnd_Click()
  on error resume next
  fndITTOUT_PALET.ShowForm
End Sub
Private Sub cmdITTOUT_PALETRun_Click()
  on error resume next
  gridITTOUT_PALET_DblClick
End Sub
Private Sub pnlITTOUT_LINES_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTOUT_PALET.Left = Left
  gridITTOUT_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTOUT_PALET.Width = Width
  gridITTOUT_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTOUT_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTOUT_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTOUT_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTOUT_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTOUT_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTOUT_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTOUT_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTOUT_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTOUT_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTOUT_PALETRef_Click()
  on error resume next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 Then
 If gridITTOUT_LINES.RowIndex ( gridITTOUT_LINES.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTOUT_PALET.refresh
   gridITTOUT_PALET.itemcount=gu.ITTOUT_PALET.count
   gridITTOUT_PALET.refetch
   gridITTOUT_PALET.refresh
 else
  gridITTOUT_PALET.columns.clear
  gridITTOUT_PALET.itemcount=0
 End If
else
 gridITTOUT_PALET.columns.clear
 gridITTOUT_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTOUT_PALETEdit_Click()
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmITTOUT_PALET_main.Item = u
    again: frmITTOUT_PALET_main.NotFirstTime = False
    frmITTOUT_PALET_main.OnInit
    frmITTOUT_PALET_main.Show vbModal
    If frmITTOUT_PALET_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_PALET.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTOUT_PALETDel_Click()
  on error resume next
End Sub
Private Sub cmdITTOUT_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTOUT_LINES_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTOUT_LINES.ItemCount = 0 Then 
  gridITTOUT_PALET.ItemCount=0
  Exit Sub
End If
If gridITTOUT_LINES.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTOUT_LINES.Row And LastRow &gt; 0 Then
    gridITTOUT_LINES.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTOUT_LINES.GetRowData(gridITTOUT_LINES.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTOUT_LINES.RowIndex ( gridITTOUT_LINES.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTOUT_LINES.Row or gridITTOUT_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTOUT_PALET.Preparegrid gridITTOUT_PALET
  gridITTOUT_PALET.ItemCount=0
    LoadGridLayout gridITTOUT_PALET
    Set fndITTOUT_PALET = Nothing
    Set fndITTOUT_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTOUT_PALET.Init gridITTOUT_PALET
  gridITTOUT_PALET.ItemCount=gu.ITTOUT_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTOUT_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTOUT_PALET.LoadRow gridITTOUT_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTOUT_PALET_KeyPress(KeyAscii As Integer)
  If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub gridITTOUT_PALET_DblClick()
    cmdITTOUT_PALETEdit_click
End Sub
Private Sub gridITTOUT_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
 If gridITTOUT_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTOUT_PALET.Row And LastRow &gt; 0 Then
     gridITTOUT_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTOUT_PALET.GetRowData(gridITTOUT_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTOUT_PALETPASTE_Click()
On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ITTOUT_PALET.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_PALET.ItemCount = u.parent.Count
    ELSE
      GU.ITTOUT_PALET.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_PALET
End If
end sub
private sub mnuITTOUT_PALETAdd_click()
   menuActionITTOUT_PALET =&quot;ADD&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETEdit_click()
   menuActionITTOUT_PALET =&quot;EDIT&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETDelete_click()
   menuActionITTOUT_PALET =&quot;DEL&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETOpen_click()
   menuActionITTOUT_PALET =&quot;RUN&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETRef_click()
   menuActionITTOUT_PALET =&quot;REF&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
  Private Sub mnuITTOUT_PALETCOPY_Click()
    On Error Resume Next
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.Row &gt; 0 Then
     If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_PALETCUT_Click()
    On Error Resume Next
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.Row &gt; 0 Then
     If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
  If gridITTOUT_PALET.Row &gt; 0 Then
   If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_PALET.ItemCount = u.parent.Count
      gridITTOUT_PALET.RefreshRowIndex gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_PALETPrn_click()
   menuActionITTOUT_PALET =&quot;PRN&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETCfg_click()
   menuActionITTOUT_PALET =&quot;CFG&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETFind_click()
   menuActionITTOUT_PALET =&quot;FND&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETAcc_click()
   menuActionITTOUT_PALET =&quot;ACC&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub menuTimerITTOUT_PALET_timer()
   menuTimerITTOUT_PALET.enabled = false
   if menuActionITTOUT_PALET =&quot;ADD&quot; then cmdITTOUT_PALETADD_CLick
   if menuActionITTOUT_PALET =&quot;EDIT&quot; then cmdITTOUT_PALETEDIT_CLick
   if menuActionITTOUT_PALET =&quot;DEL&quot; then cmdITTOUT_PALETDEL_CLick
   if menuActionITTOUT_PALET =&quot;RUN&quot; then cmdITTOUT_PALETRUN_CLick
   if menuActionITTOUT_PALET =&quot;REF&quot; then cmdITTOUT_PALETREF_CLick
   if menuActionITTOUT_PALET =&quot;PRN&quot; then cmdITTOUT_PALETPRN_CLick
   if menuActionITTOUT_PALET =&quot;CFG&quot; then cmdITTOUT_PALETCFG_CLick
   if menuActionITTOUT_PALET =&quot;FND&quot; then cmdITTOUT_PALETFND_CLick
   if menuActionITTOUT_PALET =&quot;ACC&quot; then cmdITTOUT_PALETACC_CLick
   menuActionITTOUT_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_LINESAdd,cmdITTOUT_LINESAdd.tag
  LoadBtnPictures cmdITTOUT_LINESEdit,cmdITTOUT_LINESEdit.tag
  LoadBtnPictures cmdITTOUT_LINESDel,cmdITTOUT_LINESDel.tag
  LoadBtnPictures cmdITTOUT_LINESRef,cmdITTOUT_LINESRef.tag
  LoadBtnPictures cmdITTOUT_LINESPrn,cmdITTOUT_LINESPrn.tag
  LoadBtnPictures cmdITTOUT_LINESFnd,cmdITTOUT_LINESFnd.tag
  LoadBtnPictures cmdITTOUT_LINESRun,cmdITTOUT_LINESRun.tag
  LoadBtnPictures cmdITTOUT_LINESAcc,cmdITTOUT_LINESAcc.tag
  LoadBtnPictures cmdITTOUT_LINESCfg,cmdITTOUT_LINESCfg.tag
  item.ITTOUT_LINES.PrepareGrid gridITTOUT_LINES
  LoadGridLayout gridITTOUT_LINES
  Set fndITTOUT_LINES = Nothing
  On Error Resume Next
  Set fndITTOUT_LINES = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_LINES.Init gridITTOUT_LINES
  LoadBtnPictures cmdITTOUT_PALETAdd,cmdITTOUT_PALETAdd.tag
  LoadBtnPictures cmdITTOUT_PALETEdit,cmdITTOUT_PALETEdit.tag
  LoadBtnPictures cmdITTOUT_PALETDel,cmdITTOUT_PALETDel.tag
  LoadBtnPictures cmdITTOUT_PALETRef,cmdITTOUT_PALETRef.tag
  LoadBtnPictures cmdITTOUT_PALETPrn,cmdITTOUT_PALETPrn.tag
  LoadBtnPictures cmdITTOUT_PALETFnd,cmdITTOUT_PALETFnd.Tag
  LoadBtnPictures cmdITTOUT_PALETCfg,cmdITTOUT_PALETCfg.tag
  LoadBtnPictures cmdITTOUT_PALETRun,cmdITTOUT_PALETRun.Tag
  LoadBtnPictures cmdITTOUT_PALETAcc,cmdITTOUT_PALETAcc.Tag
  gridITTOUT_PALET.Columns.Clear
  gridITTOUT_PALET.ItemCount=0
  cmdITTOUT_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTOUT_LINES.RestorePosition
  gridITTOUT_LINES_RowColChange gridITTOUT_LINES.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_LINES.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_LINES = nothing
  set fndITTOUT_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_EPL_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTOUT_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTOUT_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_EPLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_EPLOpen"/></ControlData><ControlData Name="mnuITTOUT_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLRef"/></ControlData><ControlData Name="mnuITTOUT_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_EPLS1"/></ControlData><ControlData Name="mnuITTOUT_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_EPLBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCOPY"/></ControlData><ControlData Name="mnuITTOUT_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCUT"/></ControlData><ControlData Name="mnuITTOUT_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLPASTE"/></ControlData><ControlData Name="mnuITTOUT_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCHANGE"/></ControlData><ControlData Name="mnuITTOUT_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLPrn"/></ControlData><ControlData Name="mnuITTOUT_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCfg"/></ControlData><ControlData Name="mnuITTOUT_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_EPLFind"/></ControlData><ControlData Name="mnuITTOUT_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_EPL as object
private menuActionITTOUT_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_EPL,&quot;gridITTOUT_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_EPLRef_Click()
  on error resume next
  item.ITTOUT_EPL.Refresh
  gridITTOUT_EPL.itemCount = item.ITTOUT_EPL.count
  gridITTOUT_EPL.Refetch
  gridITTOUT_EPL.Refresh
End Sub
Private Sub cmdITTOUT_EPLAcc_Click()
On Error Resume Next
If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
If gridITTOUT_EPL.Row &gt; 0 Then
 If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_EPLEdit_Click()
  on error resume next
If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
If gridITTOUT_EPL.Row &gt; 0 then
 If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_EPL_main.Item = u
    again: frmITTOUT_EPL_main.NotFirstTime = False
    frmITTOUT_EPL_main.OnInit
    frmITTOUT_EPL_main.Show vbModal
    If frmITTOUT_EPL_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_EPL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_EPLDel_Click()
  on error resume next
End Sub
Private Sub cmdITTOUT_EPLAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_EPLFnd_Click()
  on error resume next
  fndITTOUT_EPL.ShowForm
End Sub
Private Sub cmdITTOUT_EPLRun_Click()
  on error resume next
  gridITTOUT_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_EPL.LoadRow gridITTOUT_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTOUT_EPL_DblClick()
  cmdITTOUT_EPLEdit_Click
End Sub
Private Sub gridITTOUT_EPL_KeyPress(KeyAscii As Integer)
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTOUT_EPL.Row And LastRow &gt; 0 Then
  gridITTOUT_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTOUT_EPL.GetRowData(gridITTOUT_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTOUT_EPLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_EPL.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_EPL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_EPL
End If
end sub
private sub mnuITTOUT_EPLAdd_click()
   menuActionITTOUT_EPL =&quot;ADD&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLEdit_click()
   menuActionITTOUT_EPL =&quot;EDIT&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLDelete_click()
   menuActionITTOUT_EPL =&quot;DEL&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLOpen_click()
   menuActionITTOUT_EPL =&quot;RUN&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLRef_click()
   menuActionITTOUT_EPL =&quot;REF&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
  Private Sub mnuITTOUT_EPLCOPY_Click()
    On Error Resume Next
    If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
    If gridITTOUT_EPL.Row &gt; 0 Then
     If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_EPLCUT_Click()
    On Error Resume Next
    If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
    If gridITTOUT_EPL.Row &gt; 0 Then
     If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  If gridITTOUT_EPL.Row &gt; 0 Then
   If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_EPL.ItemCount = u.parent.Count
      gridITTOUT_EPL.RefreshRowIndex gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_EPLPrn_click()
   menuActionITTOUT_EPL =&quot;PRN&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLCfg_click()
   menuActionITTOUT_EPL =&quot;CFG&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLFind_click()
   menuActionITTOUT_EPL =&quot;FND&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLAcc_click()
   menuActionITTOUT_EPL =&quot;ACC&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub menuTimerITTOUT_EPL_timer()
   menuTimerITTOUT_EPL.enabled = false
   if menuActionITTOUT_EPL =&quot;ADD&quot; then cmdITTOUT_EPLADD_CLick
   if menuActionITTOUT_EPL =&quot;EDIT&quot; then cmdITTOUT_EPLEDIT_CLick
   if menuActionITTOUT_EPL =&quot;DEL&quot; then cmdITTOUT_EPLDEL_CLick
   if menuActionITTOUT_EPL =&quot;RUN&quot; then cmdITTOUT_EPLRUN_CLick
   if menuActionITTOUT_EPL =&quot;REF&quot; then cmdITTOUT_EPLREF_CLick
   if menuActionITTOUT_EPL =&quot;PRN&quot; then cmdITTOUT_EPLPRN_CLick
   if menuActionITTOUT_EPL =&quot;CFG&quot; then cmdITTOUT_EPLCFG_CLick
   if menuActionITTOUT_EPL =&quot;FND&quot; then cmdITTOUT_EPLFND_CLick
   if menuActionITTOUT_EPL =&quot;ACC&quot; then cmdITTOUT_EPLACC_CLick
   menuActionITTOUT_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_EPLAdd,cmdITTOUT_EPLAdd.tag
  LoadBtnPictures cmdITTOUT_EPLEdit,cmdITTOUT_EPLEdit.tag
  LoadBtnPictures cmdITTOUT_EPLDel,cmdITTOUT_EPLDel.tag
  LoadBtnPictures cmdITTOUT_EPLRef,cmdITTOUT_EPLRef.tag
  LoadBtnPictures cmdITTOUT_EPLPrn,cmdITTOUT_EPLPrn.tag
  LoadBtnPictures cmdITTOUT_EPLFnd,cmdITTOUT_EPLFnd.tag
  LoadBtnPictures cmdITTOUT_EPLRun,cmdITTOUT_EPLRun.tag
  LoadBtnPictures cmdITTOUT_EPLAcc,cmdITTOUT_EPLAcc.tag
  LoadBtnPictures cmdITTOUT_EPLCfg,cmdITTOUT_EPLCfg.tag
  item.ITTOUT_EPL.PrepareGrid gridITTOUT_EPL
  LoadGridLayout gridITTOUT_EPL
  Set fndITTOUT_EPL = Nothing
  On Error Resume Next
  Set fndITTOUT_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_EPL.Init gridITTOUT_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTOUT_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTOUT_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_SRV_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTOUT_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTOUT_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTOUT_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTOUT_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_SRVOpen"/></ControlData><ControlData Name="mnuITTOUT_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVRef"/></ControlData><ControlData Name="mnuITTOUT_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_SRVS1"/></ControlData><ControlData Name="mnuITTOUT_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCOPY"/></ControlData><ControlData Name="mnuITTOUT_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCUT"/></ControlData><ControlData Name="mnuITTOUT_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVPASTE"/></ControlData><ControlData Name="mnuITTOUT_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCHANGE"/></ControlData><ControlData Name="mnuITTOUT_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVPrn"/></ControlData><ControlData Name="mnuITTOUT_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCfg"/></ControlData><ControlData Name="mnuITTOUT_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_SRVFind"/></ControlData><ControlData Name="mnuITTOUT_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_SRV as object
private menuActionITTOUT_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_SRV,&quot;gridITTOUT_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_SRVRef_Click()
  on error resume next
  item.ITTOUT_SRV.Refresh
  gridITTOUT_SRV.itemCount = item.ITTOUT_SRV.count
  gridITTOUT_SRV.Refetch
  gridITTOUT_SRV.Refresh
End Sub
Private Sub cmdITTOUT_SRVAcc_Click()
On Error Resume Next
If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
If gridITTOUT_SRV.Row &gt; 0 Then
 If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_SRVEdit_Click()
  on error resume next
If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
If gridITTOUT_SRV.Row &gt; 0 then
 If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_SRV_main.Item = u
    again: frmITTOUT_SRV_main.NotFirstTime = False
    frmITTOUT_SRV_main.OnInit
    frmITTOUT_SRV_main.Show vbModal
    If frmITTOUT_SRV_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdITTOUT_SRVAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_SRVFnd_Click()
  on error resume next
  fndITTOUT_SRV.ShowForm
End Sub
Private Sub cmdITTOUT_SRVRun_Click()
  on error resume next
  gridITTOUT_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_SRV.LoadRow gridITTOUT_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTOUT_SRV_DblClick()
  cmdITTOUT_SRVEdit_Click
End Sub
Private Sub gridITTOUT_SRV_KeyPress(KeyAscii As Integer)
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTOUT_SRV.Row And LastRow &gt; 0 Then
  gridITTOUT_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTOUT_SRV.GetRowData(gridITTOUT_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTOUT_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_SRV
End If
end sub
private sub mnuITTOUT_SRVAdd_click()
   menuActionITTOUT_SRV =&quot;ADD&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVEdit_click()
   menuActionITTOUT_SRV =&quot;EDIT&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVDelete_click()
   menuActionITTOUT_SRV =&quot;DEL&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVOpen_click()
   menuActionITTOUT_SRV =&quot;RUN&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVRef_click()
   menuActionITTOUT_SRV =&quot;REF&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
  Private Sub mnuITTOUT_SRVCOPY_Click()
    On Error Resume Next
    If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
    If gridITTOUT_SRV.Row &gt; 0 Then
     If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_SRVCUT_Click()
    On Error Resume Next
    If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
    If gridITTOUT_SRV.Row &gt; 0 Then
     If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  If gridITTOUT_SRV.Row &gt; 0 Then
   If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_SRV.ItemCount = u.parent.Count
      gridITTOUT_SRV.RefreshRowIndex gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_SRVPrn_click()
   menuActionITTOUT_SRV =&quot;PRN&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVCfg_click()
   menuActionITTOUT_SRV =&quot;CFG&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVFind_click()
   menuActionITTOUT_SRV =&quot;FND&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVAcc_click()
   menuActionITTOUT_SRV =&quot;ACC&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub menuTimerITTOUT_SRV_timer()
   menuTimerITTOUT_SRV.enabled = false
   if menuActionITTOUT_SRV =&quot;ADD&quot; then cmdITTOUT_SRVADD_CLick
   if menuActionITTOUT_SRV =&quot;EDIT&quot; then cmdITTOUT_SRVEDIT_CLick
   if menuActionITTOUT_SRV =&quot;DEL&quot; then cmdITTOUT_SRVDEL_CLick
   if menuActionITTOUT_SRV =&quot;RUN&quot; then cmdITTOUT_SRVRUN_CLick
   if menuActionITTOUT_SRV =&quot;REF&quot; then cmdITTOUT_SRVREF_CLick
   if menuActionITTOUT_SRV =&quot;PRN&quot; then cmdITTOUT_SRVPRN_CLick
   if menuActionITTOUT_SRV =&quot;CFG&quot; then cmdITTOUT_SRVCFG_CLick
   if menuActionITTOUT_SRV =&quot;FND&quot; then cmdITTOUT_SRVFND_CLick
   if menuActionITTOUT_SRV =&quot;ACC&quot; then cmdITTOUT_SRVACC_CLick
   menuActionITTOUT_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_SRVAdd,cmdITTOUT_SRVAdd.tag
  LoadBtnPictures cmdITTOUT_SRVEdit,cmdITTOUT_SRVEdit.tag
  LoadBtnPictures cmdITTOUT_SRVDel,cmdITTOUT_SRVDel.tag
  LoadBtnPictures cmdITTOUT_SRVRef,cmdITTOUT_SRVRef.tag
  LoadBtnPictures cmdITTOUT_SRVPrn,cmdITTOUT_SRVPrn.tag
  LoadBtnPictures cmdITTOUT_SRVFnd,cmdITTOUT_SRVFnd.tag
  LoadBtnPictures cmdITTOUT_SRVRun,cmdITTOUT_SRVRun.tag
  LoadBtnPictures cmdITTOUT_SRVAcc,cmdITTOUT_SRVAcc.tag
  LoadBtnPictures cmdITTOUT_SRVCfg,cmdITTOUT_SRVCfg.tag
  item.ITTOUT_SRV.PrepareGrid gridITTOUT_SRV
  LoadGridLayout gridITTOUT_SRV
  Set fndITTOUT_SRV = Nothing
  On Error Resume Next
  Set fndITTOUT_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_SRV.Init gridITTOUT_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTOUT_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTOUT_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_DEF" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_DEF_main"><Properties Name="Name" PropValue="pnlITTOUT_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_LINES" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_LINES_main"><Properties Name="Name" PropValue="pnlITTOUT_LINES"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_EPL" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_EPL_main"><Properties Name="Name" PropValue="pnlITTOUT_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_SRV" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_SRV_main"><Properties Name="Name" PropValue="pnlITTOUT_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отгрузка"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим main
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTOUT_DEF.IsOK
if IsItOk then IsItOk = pnlITTOUT_LINES.IsOK
if IsItOk then IsItOk = pnlITTOUT_EPL.IsOK
if IsItOk then IsItOk = pnlITTOUT_SRV.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTOUT_SRV.Visible = False
  pnlITTOUT_EPL.Visible = False
  pnlITTOUT_LINES.Visible = False
  pnlITTOUT_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTOUT_DEF&quot;
     With pnlITTOUT_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_DEF.OnClick item,parentform
     End With
   Case &quot;ITTOUT_LINES&quot;
     With pnlITTOUT_LINES
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_LINES.OnClick item,parentform
     End With
   Case &quot;ITTOUT_EPL&quot;
     With pnlITTOUT_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_EPL.OnClick item,parentform
     End With
   Case &quot;ITTOUT_SRV&quot;
     With pnlITTOUT_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_SRV.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTOUT_DEF&quot;
pnlITTOUT_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_LINES&quot;, &quot;Строки заказа&quot;)
pnlITTOUT_LINES.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTOUT_EPL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTOUT_SRV.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTOUT&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTOUT_DEF.CloseClass
 pnlITTOUT_LINES.CloseClass
 pnlITTOUT_EPL.CloseClass
 pnlITTOUT_SRV.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTOUT_DEF.OnSave
 pnlITTOUT_LINES.OnSave
 pnlITTOUT_EPL.OnSave
 pnlITTOUT_SRV.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTOUT_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_LINES.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_EPL.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_SRV.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{CDCAFF7F-B013-40AF-BE61-1A27E35DB946}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет отгрузка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot;
    i = i + 1
    m(i).Caption = &quot;Обработка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot;
    i = i + 1
    m(i).Caption = &quot;Отгрузка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{CDCAFF7F-B013-40AF-BE61-1A27E35DB946}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTOUTGUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отгрузка"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим main
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_DEF_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTOUT_DEF" ControlIndex="0" PROGID="ITTOUTGUI.ITTOUT_DEF"><Properties Name="Name" PropValue="editITTOUT_DEF"/></ControlData><ControlData Name="cmdITTOUT_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_DEFRef_Click()
  on error resume next
  Item.ITTOUT_DEF.Refresh
  cmdITTOUT_DEFAdd_Click
End Sub
Private Sub cmdITTOUT_DEFCfg_Click()
    on error resume next 
    editITTOUT_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTOUT_editITTOUT_DEF_&quot; For Output As #ff
    print #ff, editITTOUT_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTOUT_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.ITTOUT_DEF.Count = 0 Then
   set u=Item.ITTOUT_DEF.Add
u.ProcessDate = date

 End If
 Set editITTOUT_DEF.Item = Item.ITTOUT_DEF.Item(1)
 editITTOUT_DEF.InitPanel
 cmdITTOUT_DEFSave.Enabled = True
End Sub
Private Sub cmdITTOUT_DEFDel_Click()
  on error resume next
  if  editITTOUT_DEF.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editITTOUT_DEF.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editITTOUT_DEF.item.parent.Delete editITTOUT_DEF.item.id
    cmdITTOUT_DEFSave.Enabled = false
    editITTOUT_DEF.Enabled = false
    set editITTOUT_DEF.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editITTOUT_DEF_Changed()
 cmdITTOUT_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTOUT_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTOUT_DEFSave_Click()
  on error resume next
    if editITTOUT_DEF.IsOK then
    MousePointer = vbHourglass
    editITTOUT_DEF.Save
  on error goto bye
    editITTOUT_DEF.item.Save
    MousePointer = vbNormal
    cmdITTOUT_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editITTOUT_DEF.item.REFRESH
  editITTOUT_DEF.InitPanel
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_DEFSave,cmdITTOUT_DEFSave.tag
  LoadBtnPictures cmdITTOUT_DEFRef,cmdITTOUT_DEFRef.tag
  LoadBtnPictures cmdITTOUT_DEFCfg,cmdITTOUT_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTOUT_editITTOUT_DEF_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTOUT_DEF.PanelCustomisationString = buf
  cmdITTOUT_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTOUT_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTOUT_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTOUT_DEF.Save
if editITTOUT_DEF.item.Changed then
  editITTOUT_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTOUT_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_LINES_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_LINES" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTOUT_LINES"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTOUT_LINES" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_LINES"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_LINESAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_LINESRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_LINESPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_LINESCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_LINESFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_LINESRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_LINESAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_LINESAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTOUT_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_LINES" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTOUT_LINES"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_LINESAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_LINESEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_LINESOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_LINESOpen"/></ControlData><ControlData Name="mnuITTOUT_LINESRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESRef"/></ControlData><ControlData Name="mnuITTOUT_LINESS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_LINESS1"/></ControlData><ControlData Name="mnuITTOUT_LINESBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_LINESBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_LINESCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCOPY"/></ControlData><ControlData Name="mnuITTOUT_LINESCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCUT"/></ControlData><ControlData Name="mnuITTOUT_LINESPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESPASTE"/></ControlData><ControlData Name="mnuITTOUT_LINESCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCHANGE"/></ControlData><ControlData Name="mnuITTOUT_LINESCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_LINESPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_LINESPrn"/></ControlData><ControlData Name="mnuITTOUT_LINESCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_LINESCfg"/></ControlData><ControlData Name="mnuITTOUT_LINESFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_LINESFind"/></ControlData><ControlData Name="mnuITTOUT_LINESAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_LINESAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_LINES" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_LINES"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTOUT_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTOUT_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_PALETEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_PALETOpen"/></ControlData><ControlData Name="mnuITTOUT_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETRef"/></ControlData><ControlData Name="mnuITTOUT_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_PALETS1"/></ControlData><ControlData Name="mnuITTOUT_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_PALETBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCOPY"/></ControlData><ControlData Name="mnuITTOUT_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCUT"/></ControlData><ControlData Name="mnuITTOUT_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETPASTE"/></ControlData><ControlData Name="mnuITTOUT_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCHANGE"/></ControlData><ControlData Name="mnuITTOUT_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_PALETPrn"/></ControlData><ControlData Name="mnuITTOUT_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_PALETCfg"/></ControlData><ControlData Name="mnuITTOUT_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_PALETFind"/></ControlData><ControlData Name="mnuITTOUT_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_LINES as object
private menuActionITTOUT_LINES as string
private fndITTOUT_PALET as object
private menuActionITTOUT_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTOUT_LINES_PositionChanged()
  pnlITTOUT_LINES.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_LINES_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_LINESCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_LINES_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_LINES
End If
end sub
private sub mnuITTOUT_LINESAdd_click()
   menuActionITTOUT_LINES =&quot;ADD&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESEdit_click()
   menuActionITTOUT_LINES =&quot;EDIT&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESDelete_click()
   menuActionITTOUT_LINES =&quot;DEL&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESOpen_click()
   menuActionITTOUT_LINES =&quot;RUN&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESRef_click()
   menuActionITTOUT_LINES =&quot;REF&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
  Private Sub mnuITTOUT_LINESCOPY_Click()
    On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_LINES.Row &gt; 0 Then
     If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_LINESCUT_Click()
    On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_LINES.Row &gt; 0 Then
     If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_LINES.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_LINESCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  If gridITTOUT_LINES.Row &gt; 0 Then
   If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_LINES.ItemCount = u.parent.Count
      gridITTOUT_LINES.RefreshRowIndex gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_LINESCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_LINESPrn_click()
   menuActionITTOUT_LINES =&quot;PRN&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESCfg_click()
   menuActionITTOUT_LINES =&quot;CFG&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESFind_click()
   menuActionITTOUT_LINES =&quot;FND&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub mnuITTOUT_LINESAcc_click()
   menuActionITTOUT_LINES =&quot;ACC&quot;
   menuTimerITTOUT_LINES.enabled = true
end sub
private sub menuTimerITTOUT_LINES_timer()
   menuTimerITTOUT_LINES.enabled = false
   if menuActionITTOUT_LINES =&quot;ADD&quot; then cmdITTOUT_LINESADD_CLick
   if menuActionITTOUT_LINES =&quot;EDIT&quot; then cmdITTOUT_LINESEDIT_CLick
   if menuActionITTOUT_LINES =&quot;DEL&quot; then cmdITTOUT_LINESDEL_CLick
   if menuActionITTOUT_LINES =&quot;RUN&quot; then cmdITTOUT_LINESRUN_CLick
   if menuActionITTOUT_LINES =&quot;REF&quot; then cmdITTOUT_LINESREF_CLick
   if menuActionITTOUT_LINES =&quot;PRN&quot; then cmdITTOUT_LINESPRN_CLick
   if menuActionITTOUT_LINES =&quot;CFG&quot; then cmdITTOUT_LINESCFG_CLick
   if menuActionITTOUT_LINES =&quot;FND&quot; then cmdITTOUT_LINESFND_CLick
   if menuActionITTOUT_LINES =&quot;ACC&quot; then cmdITTOUT_LINESACC_CLick
   menuActionITTOUT_LINES =&quot;&quot;
end sub
Private Sub cmdITTOUT_LINESCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_LINES,&quot;gridITTOUT_LINES&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_LINESPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_LINES,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_LINESRef_Click()
  on error resume next
  item.ITTOUT_LINES.Refresh
  gridITTOUT_LINES.itemCount = item.ITTOUT_LINES.count
  gridITTOUT_LINES.Refetch
  gridITTOUT_LINES.Refresh
End Sub
Private Sub cmdITTOUT_LINESAcc_Click()
On Error Resume Next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 Then
 If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_LINESEdit_Click()
  on error resume next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 then
 If gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_LINES_.Item = u
    again: frmITTOUT_LINES_.NotFirstTime = False
    frmITTOUT_LINES_.OnInit
    frmITTOUT_LINES_.Show vbModal
    If frmITTOUT_LINES_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_LINES.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_LINESDel_Click()
  on error resume next
  gridITTOUT_LINES.Delete
End Sub
Private Sub cmdITTOUT_LINESAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTOUT_LINES.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;OUT%P&quot;, &quot;&quot;) 

      Set frmITTOUT_LINES_.Item = u
      again: frmITTOUT_LINES_.NotFirstTime = False
      frmITTOUT_LINES_.OnInit
      frmITTOUT_LINES_.Show vbModal
      If frmITTOUT_LINES_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_LINES.ItemCount = Item.ITTOUT_LINES.Count
        gridITTOUT_LINES.Refresh
        gridITTOUT_LINES.RefreshGroups
        gridITTOUT_LINES.Refreshsort
        gridITTOUT_LINES.MoveToBookmark u.ID &amp; &quot;ITTOUT_LINES&quot;
      Else
        Item.ITTOUT_LINES.Delete u.ID
        Item.ITTOUT_LINES.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_LINESFnd_Click()
  on error resume next
  fndITTOUT_LINES.ShowForm
End Sub
Private Sub cmdITTOUT_LINESRun_Click()
  on error resume next
  gridITTOUT_LINES_DblClick
End Sub
Private Sub gridITTOUT_LINES_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_LINES.LoadRow gridITTOUT_LINES, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_LINES_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_LINES_DblClick()
  cmdITTOUT_LINESEdit_Click
End Sub
Private Sub gridITTOUT_LINES_KeyPress(KeyAscii As Integer)
  If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_LINES.FindOnPress KeyAscii
End Sub

Private Sub pnlITTOUT_LINES_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTOUT_LINES.Left = Left
  gridITTOUT_LINES.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTOUT_LINES.Width = Width
  gridITTOUT_LINES.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTOUT_LINESAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_LINESAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTOUT_LINESEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTOUT_LINESDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTOUT_LINESRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTOUT_LINESPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTOUT_LINESCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTOUT_LINESFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTOUT_LINESRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTOUT_LINESAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTOUT_LINESPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_LINES.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_LINES.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdITTOUT_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_PALET,&quot;gridITTOUT_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_PALETAcc_Click()
On Error Resume Next
If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
If gridITTOUT_PALET.Row &gt; 0 Then
 If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_PALETFnd_Click()
  on error resume next
  fndITTOUT_PALET.ShowForm
End Sub
Private Sub cmdITTOUT_PALETRun_Click()
  on error resume next
  gridITTOUT_PALET_DblClick
End Sub
Private Sub pnlITTOUT_LINES_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTOUT_PALET.Left = Left
  gridITTOUT_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTOUT_PALET.Width = Width
  gridITTOUT_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTOUT_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTOUT_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTOUT_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTOUT_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTOUT_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTOUT_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTOUT_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTOUT_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTOUT_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTOUT_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTOUT_PALETRef_Click()
  on error resume next
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
If gridITTOUT_LINES.Row &gt; 0 Then
 If gridITTOUT_LINES.RowIndex ( gridITTOUT_LINES.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTOUT_PALET.refresh
   gridITTOUT_PALET.itemcount=gu.ITTOUT_PALET.count
   gridITTOUT_PALET.refetch
   gridITTOUT_PALET.refresh
 else
  gridITTOUT_PALET.columns.clear
  gridITTOUT_PALET.itemcount=0
 End If
else
 gridITTOUT_PALET.columns.clear
 gridITTOUT_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTOUT_PALETEdit_Click()
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmITTOUT_PALET_.Item = u
    again: frmITTOUT_PALET_.NotFirstTime = False
    frmITTOUT_PALET_.OnInit
    frmITTOUT_PALET_.Show vbModal
    If frmITTOUT_PALET_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_PALET.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTOUT_PALETDel_Click()
  on error resume next
  gridITTOUT_PALET.Delete
End Sub
Private Sub cmdITTOUT_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ITTOUT_PALET.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;OUTPAL%P&quot;, &quot;&quot;) 

      Set frmITTOUT_PALET_.Item = u
      again: frmITTOUT_PALET_.NotFirstTime = False
      frmITTOUT_PALET_.OnInit
      frmITTOUT_PALET_.Show vbModal
      If frmITTOUT_PALET_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_PALET.ItemCount = gu.ITTOUT_PALET.Count
        gridITTOUT_PALET.Refresh
        gridITTOUT_PALET.RefreshGroups
        gridITTOUT_PALET.Refreshsort
        gridITTOUT_PALET.MoveToBookmark u.ID &amp; &quot;ITTOUT_PALET&quot;
      Else
        gu.ITTOUT_PALET.Delete u.ID
        gu.ITTOUT_PALET.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTOUT_LINES_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTOUT_LINES.ItemCount = 0 Then 
  gridITTOUT_PALET.ItemCount=0
  Exit Sub
End If
If gridITTOUT_LINES.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTOUT_LINES.Row And LastRow &gt; 0 Then
    gridITTOUT_LINES.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTOUT_LINES.GetRowData(gridITTOUT_LINES.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTOUT_LINES.RowIndex ( gridITTOUT_LINES.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTOUT_LINES.Row or gridITTOUT_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTOUT_PALET.Preparegrid gridITTOUT_PALET
  gridITTOUT_PALET.ItemCount=0
    LoadGridLayout gridITTOUT_PALET
    Set fndITTOUT_PALET = Nothing
    Set fndITTOUT_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTOUT_PALET.Init gridITTOUT_PALET
  gridITTOUT_PALET.ItemCount=gu.ITTOUT_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTOUT_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTOUT_PALET.LoadRow gridITTOUT_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTOUT_PALET_KeyPress(KeyAscii As Integer)
  If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridITTOUT_PALET_DblClick()
    cmdITTOUT_PALETEdit_click
End Sub
Private Sub gridITTOUT_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
 If gridITTOUT_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTOUT_PALET.Row And LastRow &gt; 0 Then
     gridITTOUT_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTOUT_PALET.GetRowData(gridITTOUT_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTOUT_PALETPASTE_Click()
On Error Resume Next
    If gridITTOUT_LINES.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTOUT_LINES.RowBookmark(gridITTOUT_LINES.RowIndex(gridITTOUT_LINES.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ITTOUT_PALET.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_PALET.ItemCount = u.parent.Count
    ELSE
      GU.ITTOUT_PALET.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_PALET
End If
end sub
private sub mnuITTOUT_PALETAdd_click()
   menuActionITTOUT_PALET =&quot;ADD&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETEdit_click()
   menuActionITTOUT_PALET =&quot;EDIT&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETDelete_click()
   menuActionITTOUT_PALET =&quot;DEL&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETOpen_click()
   menuActionITTOUT_PALET =&quot;RUN&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETRef_click()
   menuActionITTOUT_PALET =&quot;REF&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
  Private Sub mnuITTOUT_PALETCOPY_Click()
    On Error Resume Next
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.Row &gt; 0 Then
     If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_PALETCUT_Click()
    On Error Resume Next
    If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
    If gridITTOUT_PALET.Row &gt; 0 Then
     If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_PALET.ItemCount = 0 Then Exit Sub
  If gridITTOUT_PALET.Row &gt; 0 Then
   If gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_PALET.RowBookmark(gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_PALET.ItemCount = u.parent.Count
      gridITTOUT_PALET.RefreshRowIndex gridITTOUT_PALET.RowIndex(gridITTOUT_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_PALETPrn_click()
   menuActionITTOUT_PALET =&quot;PRN&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETCfg_click()
   menuActionITTOUT_PALET =&quot;CFG&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETFind_click()
   menuActionITTOUT_PALET =&quot;FND&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub mnuITTOUT_PALETAcc_click()
   menuActionITTOUT_PALET =&quot;ACC&quot;
   menuTimerITTOUT_PALET.enabled = true
end sub
private sub menuTimerITTOUT_PALET_timer()
   menuTimerITTOUT_PALET.enabled = false
   if menuActionITTOUT_PALET =&quot;ADD&quot; then cmdITTOUT_PALETADD_CLick
   if menuActionITTOUT_PALET =&quot;EDIT&quot; then cmdITTOUT_PALETEDIT_CLick
   if menuActionITTOUT_PALET =&quot;DEL&quot; then cmdITTOUT_PALETDEL_CLick
   if menuActionITTOUT_PALET =&quot;RUN&quot; then cmdITTOUT_PALETRUN_CLick
   if menuActionITTOUT_PALET =&quot;REF&quot; then cmdITTOUT_PALETREF_CLick
   if menuActionITTOUT_PALET =&quot;PRN&quot; then cmdITTOUT_PALETPRN_CLick
   if menuActionITTOUT_PALET =&quot;CFG&quot; then cmdITTOUT_PALETCFG_CLick
   if menuActionITTOUT_PALET =&quot;FND&quot; then cmdITTOUT_PALETFND_CLick
   if menuActionITTOUT_PALET =&quot;ACC&quot; then cmdITTOUT_PALETACC_CLick
   menuActionITTOUT_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_LINESAdd,cmdITTOUT_LINESAdd.tag
  LoadBtnPictures cmdITTOUT_LINESEdit,cmdITTOUT_LINESEdit.tag
  LoadBtnPictures cmdITTOUT_LINESDel,cmdITTOUT_LINESDel.tag
  LoadBtnPictures cmdITTOUT_LINESRef,cmdITTOUT_LINESRef.tag
  LoadBtnPictures cmdITTOUT_LINESPrn,cmdITTOUT_LINESPrn.tag
  LoadBtnPictures cmdITTOUT_LINESFnd,cmdITTOUT_LINESFnd.tag
  LoadBtnPictures cmdITTOUT_LINESRun,cmdITTOUT_LINESRun.tag
  LoadBtnPictures cmdITTOUT_LINESAcc,cmdITTOUT_LINESAcc.tag
  LoadBtnPictures cmdITTOUT_LINESCfg,cmdITTOUT_LINESCfg.tag
  item.ITTOUT_LINES.PrepareGrid gridITTOUT_LINES
  LoadGridLayout gridITTOUT_LINES
  Set fndITTOUT_LINES = Nothing
  On Error Resume Next
  Set fndITTOUT_LINES = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_LINES.Init gridITTOUT_LINES
  LoadBtnPictures cmdITTOUT_PALETAdd,cmdITTOUT_PALETAdd.tag
  LoadBtnPictures cmdITTOUT_PALETEdit,cmdITTOUT_PALETEdit.tag
  LoadBtnPictures cmdITTOUT_PALETDel,cmdITTOUT_PALETDel.tag
  LoadBtnPictures cmdITTOUT_PALETRef,cmdITTOUT_PALETRef.tag
  LoadBtnPictures cmdITTOUT_PALETPrn,cmdITTOUT_PALETPrn.tag
  LoadBtnPictures cmdITTOUT_PALETFnd,cmdITTOUT_PALETFnd.Tag
  LoadBtnPictures cmdITTOUT_PALETCfg,cmdITTOUT_PALETCfg.tag
  LoadBtnPictures cmdITTOUT_PALETRun,cmdITTOUT_PALETRun.Tag
  LoadBtnPictures cmdITTOUT_PALETAcc,cmdITTOUT_PALETAcc.Tag
  gridITTOUT_PALET.Columns.Clear
  gridITTOUT_PALET.ItemCount=0
  cmdITTOUT_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTOUT_LINES.RestorePosition
  gridITTOUT_LINES_RowColChange gridITTOUT_LINES.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_LINES.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_LINES = nothing
  set fndITTOUT_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_EPL_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTOUT_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTOUT_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_EPLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_EPLOpen"/></ControlData><ControlData Name="mnuITTOUT_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLRef"/></ControlData><ControlData Name="mnuITTOUT_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_EPLS1"/></ControlData><ControlData Name="mnuITTOUT_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_EPLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCOPY"/></ControlData><ControlData Name="mnuITTOUT_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCUT"/></ControlData><ControlData Name="mnuITTOUT_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLPASTE"/></ControlData><ControlData Name="mnuITTOUT_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCHANGE"/></ControlData><ControlData Name="mnuITTOUT_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_EPLPrn"/></ControlData><ControlData Name="mnuITTOUT_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_EPLCfg"/></ControlData><ControlData Name="mnuITTOUT_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_EPLFind"/></ControlData><ControlData Name="mnuITTOUT_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_EPL as object
private menuActionITTOUT_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_EPL,&quot;gridITTOUT_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_EPLRef_Click()
  on error resume next
  item.ITTOUT_EPL.Refresh
  gridITTOUT_EPL.itemCount = item.ITTOUT_EPL.count
  gridITTOUT_EPL.Refetch
  gridITTOUT_EPL.Refresh
End Sub
Private Sub cmdITTOUT_EPLAcc_Click()
On Error Resume Next
If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
If gridITTOUT_EPL.Row &gt; 0 Then
 If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_EPLEdit_Click()
  on error resume next
If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
If gridITTOUT_EPL.Row &gt; 0 then
 If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_EPL_.Item = u
    again: frmITTOUT_EPL_.NotFirstTime = False
    frmITTOUT_EPL_.OnInit
    frmITTOUT_EPL_.Show vbModal
    If frmITTOUT_EPL_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_EPL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_EPLDel_Click()
  on error resume next
  gridITTOUT_EPL.Delete
End Sub
Private Sub cmdITTOUT_EPLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTOUT_EPL.Add()

      Set frmITTOUT_EPL_.Item = u
      again: frmITTOUT_EPL_.NotFirstTime = False
      frmITTOUT_EPL_.OnInit
      frmITTOUT_EPL_.Show vbModal
      If frmITTOUT_EPL_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_EPL.ItemCount = Item.ITTOUT_EPL.Count
        gridITTOUT_EPL.Refresh
        gridITTOUT_EPL.RefreshGroups
        gridITTOUT_EPL.Refreshsort
        gridITTOUT_EPL.MoveToBookmark u.ID &amp; &quot;ITTOUT_EPL&quot;
      Else
        Item.ITTOUT_EPL.Delete u.ID
        Item.ITTOUT_EPL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_EPLFnd_Click()
  on error resume next
  fndITTOUT_EPL.ShowForm
End Sub
Private Sub cmdITTOUT_EPLRun_Click()
  on error resume next
  gridITTOUT_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_EPL.LoadRow gridITTOUT_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTOUT_EPL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTOUT_EPL_DblClick()
  cmdITTOUT_EPLEdit_Click
End Sub
Private Sub gridITTOUT_EPL_KeyPress(KeyAscii As Integer)
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTOUT_EPL.Row And LastRow &gt; 0 Then
  gridITTOUT_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTOUT_EPL.GetRowData(gridITTOUT_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTOUT_EPLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_EPL.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_EPL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_EPL
End If
end sub
private sub mnuITTOUT_EPLAdd_click()
   menuActionITTOUT_EPL =&quot;ADD&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLEdit_click()
   menuActionITTOUT_EPL =&quot;EDIT&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLDelete_click()
   menuActionITTOUT_EPL =&quot;DEL&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLOpen_click()
   menuActionITTOUT_EPL =&quot;RUN&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLRef_click()
   menuActionITTOUT_EPL =&quot;REF&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
  Private Sub mnuITTOUT_EPLCOPY_Click()
    On Error Resume Next
    If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
    If gridITTOUT_EPL.Row &gt; 0 Then
     If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_EPLCUT_Click()
    On Error Resume Next
    If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
    If gridITTOUT_EPL.Row &gt; 0 Then
     If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_EPL.ItemCount = 0 Then Exit Sub
  If gridITTOUT_EPL.Row &gt; 0 Then
   If gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_EPL.RowBookmark(gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_EPL.ItemCount = u.parent.Count
      gridITTOUT_EPL.RefreshRowIndex gridITTOUT_EPL.RowIndex(gridITTOUT_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_EPLPrn_click()
   menuActionITTOUT_EPL =&quot;PRN&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLCfg_click()
   menuActionITTOUT_EPL =&quot;CFG&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLFind_click()
   menuActionITTOUT_EPL =&quot;FND&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub mnuITTOUT_EPLAcc_click()
   menuActionITTOUT_EPL =&quot;ACC&quot;
   menuTimerITTOUT_EPL.enabled = true
end sub
private sub menuTimerITTOUT_EPL_timer()
   menuTimerITTOUT_EPL.enabled = false
   if menuActionITTOUT_EPL =&quot;ADD&quot; then cmdITTOUT_EPLADD_CLick
   if menuActionITTOUT_EPL =&quot;EDIT&quot; then cmdITTOUT_EPLEDIT_CLick
   if menuActionITTOUT_EPL =&quot;DEL&quot; then cmdITTOUT_EPLDEL_CLick
   if menuActionITTOUT_EPL =&quot;RUN&quot; then cmdITTOUT_EPLRUN_CLick
   if menuActionITTOUT_EPL =&quot;REF&quot; then cmdITTOUT_EPLREF_CLick
   if menuActionITTOUT_EPL =&quot;PRN&quot; then cmdITTOUT_EPLPRN_CLick
   if menuActionITTOUT_EPL =&quot;CFG&quot; then cmdITTOUT_EPLCFG_CLick
   if menuActionITTOUT_EPL =&quot;FND&quot; then cmdITTOUT_EPLFND_CLick
   if menuActionITTOUT_EPL =&quot;ACC&quot; then cmdITTOUT_EPLACC_CLick
   menuActionITTOUT_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_EPLAdd,cmdITTOUT_EPLAdd.tag
  LoadBtnPictures cmdITTOUT_EPLEdit,cmdITTOUT_EPLEdit.tag
  LoadBtnPictures cmdITTOUT_EPLDel,cmdITTOUT_EPLDel.tag
  LoadBtnPictures cmdITTOUT_EPLRef,cmdITTOUT_EPLRef.tag
  LoadBtnPictures cmdITTOUT_EPLPrn,cmdITTOUT_EPLPrn.tag
  LoadBtnPictures cmdITTOUT_EPLFnd,cmdITTOUT_EPLFnd.tag
  LoadBtnPictures cmdITTOUT_EPLRun,cmdITTOUT_EPLRun.tag
  LoadBtnPictures cmdITTOUT_EPLAcc,cmdITTOUT_EPLAcc.tag
  LoadBtnPictures cmdITTOUT_EPLCfg,cmdITTOUT_EPLCfg.tag
  item.ITTOUT_EPL.PrepareGrid gridITTOUT_EPL
  LoadGridLayout gridITTOUT_EPL
  Set fndITTOUT_EPL = Nothing
  On Error Resume Next
  Set fndITTOUT_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_EPL.Init gridITTOUT_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTOUT_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTOUT_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTOUT_SRV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTOUT_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTOUT_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTOUT_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTOUT_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTOUT_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTOUT_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTOUT_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTOUT_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTOUT_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTOUT_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTOUT_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTOUT_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTOUT_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTOUT_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTOUT_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTOUT_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTOUT_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTOUT_SRVOpen"/></ControlData><ControlData Name="mnuITTOUT_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVRef"/></ControlData><ControlData Name="mnuITTOUT_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTOUT_SRVS1"/></ControlData><ControlData Name="mnuITTOUT_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTOUT_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTOUT_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCOPY"/></ControlData><ControlData Name="mnuITTOUT_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCUT"/></ControlData><ControlData Name="mnuITTOUT_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVPASTE"/></ControlData><ControlData Name="mnuITTOUT_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCHANGE"/></ControlData><ControlData Name="mnuITTOUT_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTOUT_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTOUT_SRVPrn"/></ControlData><ControlData Name="mnuITTOUT_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTOUT_SRVCfg"/></ControlData><ControlData Name="mnuITTOUT_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTOUT_SRVFind"/></ControlData><ControlData Name="mnuITTOUT_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTOUT_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTOUT_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTOUT_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTOUT_SRV as object
private menuActionITTOUT_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTOUT_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTOUT_SRV,&quot;gridITTOUT_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTOUT_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTOUT_SRVRef_Click()
  on error resume next
  item.ITTOUT_SRV.Refresh
  gridITTOUT_SRV.itemCount = item.ITTOUT_SRV.count
  gridITTOUT_SRV.Refetch
  gridITTOUT_SRV.Refresh
End Sub
Private Sub cmdITTOUT_SRVAcc_Click()
On Error Resume Next
If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
If gridITTOUT_SRV.Row &gt; 0 Then
 If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTOUT_SRVEdit_Click()
  on error resume next
If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
If gridITTOUT_SRV.Row &gt; 0 then
 If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTOUT_SRV_.Item = u
    again: frmITTOUT_SRV_.NotFirstTime = False
    frmITTOUT_SRV_.OnInit
    frmITTOUT_SRV_.Show vbModal
    If frmITTOUT_SRV_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTOUT_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTOUT_SRVDel_Click()
  on error resume next
  gridITTOUT_SRV.Delete
End Sub
Private Sub cmdITTOUT_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTOUT_SRV.Add()

      Set frmITTOUT_SRV_.Item = u
      again: frmITTOUT_SRV_.NotFirstTime = False
      frmITTOUT_SRV_.OnInit
      frmITTOUT_SRV_.Show vbModal
      If frmITTOUT_SRV_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTOUT_SRV.ItemCount = Item.ITTOUT_SRV.Count
        gridITTOUT_SRV.Refresh
        gridITTOUT_SRV.RefreshGroups
        gridITTOUT_SRV.Refreshsort
        gridITTOUT_SRV.MoveToBookmark u.ID &amp; &quot;ITTOUT_SRV&quot;
      Else
        Item.ITTOUT_SRV.Delete u.ID
        Item.ITTOUT_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTOUT_SRVFnd_Click()
  on error resume next
  fndITTOUT_SRV.ShowForm
End Sub
Private Sub cmdITTOUT_SRVRun_Click()
  on error resume next
  gridITTOUT_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTOUT_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTOUT_SRV.LoadRow gridITTOUT_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTOUT_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTOUT_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTOUT_SRV_DblClick()
  cmdITTOUT_SRVEdit_Click
End Sub
Private Sub gridITTOUT_SRV_KeyPress(KeyAscii As Integer)
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTOUT_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTOUT_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTOUT_SRV.Row And LastRow &gt; 0 Then
  gridITTOUT_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTOUT_SRV.GetRowData(gridITTOUT_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTOUT_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTOUT_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTOUT_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTOUT_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTOUT_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTOUT_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTOUT_SRV
End If
end sub
private sub mnuITTOUT_SRVAdd_click()
   menuActionITTOUT_SRV =&quot;ADD&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVEdit_click()
   menuActionITTOUT_SRV =&quot;EDIT&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVDelete_click()
   menuActionITTOUT_SRV =&quot;DEL&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVOpen_click()
   menuActionITTOUT_SRV =&quot;RUN&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVRef_click()
   menuActionITTOUT_SRV =&quot;REF&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
  Private Sub mnuITTOUT_SRVCOPY_Click()
    On Error Resume Next
    If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
    If gridITTOUT_SRV.Row &gt; 0 Then
     If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTOUT_SRVCUT_Click()
    On Error Resume Next
    If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
    If gridITTOUT_SRV.Row &gt; 0 Then
     If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTOUT_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTOUT_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTOUT_SRV.ItemCount = 0 Then Exit Sub
  If gridITTOUT_SRV.Row &gt; 0 Then
   If gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTOUT_SRV.RowBookmark(gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTOUT_SRV.ItemCount = u.parent.Count
      gridITTOUT_SRV.RefreshRowIndex gridITTOUT_SRV.RowIndex(gridITTOUT_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTOUT_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTOUT_SRVPrn_click()
   menuActionITTOUT_SRV =&quot;PRN&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVCfg_click()
   menuActionITTOUT_SRV =&quot;CFG&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVFind_click()
   menuActionITTOUT_SRV =&quot;FND&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub mnuITTOUT_SRVAcc_click()
   menuActionITTOUT_SRV =&quot;ACC&quot;
   menuTimerITTOUT_SRV.enabled = true
end sub
private sub menuTimerITTOUT_SRV_timer()
   menuTimerITTOUT_SRV.enabled = false
   if menuActionITTOUT_SRV =&quot;ADD&quot; then cmdITTOUT_SRVADD_CLick
   if menuActionITTOUT_SRV =&quot;EDIT&quot; then cmdITTOUT_SRVEDIT_CLick
   if menuActionITTOUT_SRV =&quot;DEL&quot; then cmdITTOUT_SRVDEL_CLick
   if menuActionITTOUT_SRV =&quot;RUN&quot; then cmdITTOUT_SRVRUN_CLick
   if menuActionITTOUT_SRV =&quot;REF&quot; then cmdITTOUT_SRVREF_CLick
   if menuActionITTOUT_SRV =&quot;PRN&quot; then cmdITTOUT_SRVPRN_CLick
   if menuActionITTOUT_SRV =&quot;CFG&quot; then cmdITTOUT_SRVCFG_CLick
   if menuActionITTOUT_SRV =&quot;FND&quot; then cmdITTOUT_SRVFND_CLick
   if menuActionITTOUT_SRV =&quot;ACC&quot; then cmdITTOUT_SRVACC_CLick
   menuActionITTOUT_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTOUT_SRVAdd,cmdITTOUT_SRVAdd.tag
  LoadBtnPictures cmdITTOUT_SRVEdit,cmdITTOUT_SRVEdit.tag
  LoadBtnPictures cmdITTOUT_SRVDel,cmdITTOUT_SRVDel.tag
  LoadBtnPictures cmdITTOUT_SRVRef,cmdITTOUT_SRVRef.tag
  LoadBtnPictures cmdITTOUT_SRVPrn,cmdITTOUT_SRVPrn.tag
  LoadBtnPictures cmdITTOUT_SRVFnd,cmdITTOUT_SRVFnd.tag
  LoadBtnPictures cmdITTOUT_SRVRun,cmdITTOUT_SRVRun.tag
  LoadBtnPictures cmdITTOUT_SRVAcc,cmdITTOUT_SRVAcc.tag
  LoadBtnPictures cmdITTOUT_SRVCfg,cmdITTOUT_SRVCfg.tag
  item.ITTOUT_SRV.PrepareGrid gridITTOUT_SRV
  LoadGridLayout gridITTOUT_SRV
  Set fndITTOUT_SRV = Nothing
  On Error Resume Next
  Set fndITTOUT_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTOUT_SRV.Init gridITTOUT_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTOUT_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTOUT_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTOUT_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTOUT_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTOUT_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_DEF" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_DEF_"><Properties Name="Name" PropValue="pnlITTOUT_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_LINES" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_LINES_"><Properties Name="Name" PropValue="pnlITTOUT_LINES"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_EPL" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_EPL_"><Properties Name="Name" PropValue="pnlITTOUT_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTOUT_SRV" ControlIndex="0" PROGID="ITTOUTGUI.vpnITTOUT_SRV_"><Properties Name="Name" PropValue="pnlITTOUT_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отгрузка"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим 
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTOUT_DEF.IsOK
if IsItOk then IsItOk = pnlITTOUT_LINES.IsOK
if IsItOk then IsItOk = pnlITTOUT_EPL.IsOK
if IsItOk then IsItOk = pnlITTOUT_SRV.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTOUT_SRV.Visible = False
  pnlITTOUT_EPL.Visible = False
  pnlITTOUT_LINES.Visible = False
  pnlITTOUT_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTOUT_DEF&quot;
     With pnlITTOUT_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_DEF.OnClick item,parentform
     End With
   Case &quot;ITTOUT_LINES&quot;
     With pnlITTOUT_LINES
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_LINES.OnClick item,parentform
     End With
   Case &quot;ITTOUT_EPL&quot;
     With pnlITTOUT_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_EPL.OnClick item,parentform
     End With
   Case &quot;ITTOUT_SRV&quot;
     With pnlITTOUT_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTOUT_SRV.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTOUT_DEF&quot;
pnlITTOUT_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_LINES&quot;, &quot;Строки заказа&quot;)
pnlITTOUT_LINES.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTOUT_EPL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTOUT_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTOUT_SRV.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTOUT&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTOUT_DEF.CloseClass
 pnlITTOUT_LINES.CloseClass
 pnlITTOUT_EPL.CloseClass
 pnlITTOUT_SRV.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTOUT_DEF.OnSave
 pnlITTOUT_LINES.OnSave
 pnlITTOUT_EPL.OnSave
 pnlITTOUT_SRV.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTOUT_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_LINES.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_EPL.IsChanged
m_IsChanged = m_IsChanged or pnlITTOUT_SRV.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{CDCAFF7F-B013-40AF-BE61-1A27E35DB946}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет отгрузка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot;
    i = i + 1
    m(i).Caption = &quot;Обработка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot;
    i = i + 1
    m(i).Caption = &quot;Отгрузка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{CDCAFF7F-B013-40AF-BE61-1A27E35DB946}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{881CBAAC-BE9D-4216-AB25-ED3B2761F82F}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{2CDDB562-63D7-483E-B95E-B579A9096CCC}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{70853C28-84B5-434E-8413-52DF8FBBB49B}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTOUTGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отгрузка"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим 
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTOUT&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="' модуль общих функций



"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Найти форму по имени
'Parameters:
'[IN]   Name , тип параметра: string, 
'[IN]   Mode , тип параметра: string =&quot;&quot;   - ...
'Returns:
'  объект класса form
'  ,или Nothing
'See Also:
'Example:
' dim variable as form
' Set variable = me.FormByName(...параметры...)
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;admi&quot; then

if Name=&quot;ITTOUT_DEF&quot; then 
 set FormByName = new frmITTOUT_DEF_admi
 exit function
end if

if Name=&quot;ITTOUT_LINES&quot; then 
 set FormByName = new frmITTOUT_LINES_admi
 exit function
end if

if Name=&quot;ITTOUT_PALET&quot; then 
 set FormByName = new frmITTOUT_PALET_admi
 exit function
end if

if Name=&quot;ITTOUT_EPL&quot; then 
 set FormByName = new frmITTOUT_EPL_admi
 exit function
end if

if Name=&quot;ITTOUT_SRV&quot; then 
 set FormByName = new frmITTOUT_SRV_admi
 exit function
end if

end if
if Mode=&quot;main&quot; then

if Name=&quot;ITTOUT_DEF&quot; then 
 set FormByName = new frmITTOUT_DEF_main
 exit function
end if

if Name=&quot;ITTOUT_LINES&quot; then 
 set FormByName = new frmITTOUT_LINES_main
 exit function
end if

if Name=&quot;ITTOUT_PALET&quot; then 
 set FormByName = new frmITTOUT_PALET_main
 exit function
end if

if Name=&quot;ITTOUT_EPL&quot; then 
 set FormByName = new frmITTOUT_EPL_main
 exit function
end if

if Name=&quot;ITTOUT_SRV&quot; then 
 set FormByName = new frmITTOUT_SRV_main
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;ITTOUT_DEF&quot; then 
 set FormByName = new frmITTOUT_DEF_
 exit function
end if

if Name=&quot;ITTOUT_LINES&quot; then 
 set FormByName = new frmITTOUT_LINES_
 exit function
end if

if Name=&quot;ITTOUT_PALET&quot; then 
 set FormByName = new frmITTOUT_PALET_
 exit function
end if

if Name=&quot;ITTOUT_EPL&quot; then 
 set FormByName = new frmITTOUT_EPL_
 exit function
end if

if Name=&quot;ITTOUT_SRV&quot; then 
 set FormByName = new frmITTOUT_SRV_
 exit function
end if

end if
end function

'Скопировать объект в типизированный XML  буфер
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.SaveToBuffer({параметры})
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub


'Получить объект из типизированного XML  буфера
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.GetFromBuffer(...параметры...) 
Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
